{"version":3,"sources":["../src/immer.ts","../src/utils/errors.ts","../src/utils/common.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/utils/env.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/redux/es/redux.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/redux-thunk/es/index.js","../src/index.ts","../src/getDefaultMiddleware.ts","../src/createDraftSafeSelector.ts","../src/devtoolsExtension.ts","../src/isPlainObject.ts","../src/utils.ts","../src/immutableStateInvariantMiddleware.ts","../src/serializableStateInvariantMiddleware.ts","../src/configureStore.ts","../src/createAction.ts","../src/mapBuilders.ts","../src/createReducer.ts","../src/createSlice.ts","../src/entities/entity_state.ts","../src/entities/state_selectors.ts","../src/entities/state_adapter.ts","../src/entities/utils.ts","../src/entities/unsorted_state_adapter.ts","../src/entities/sorted_state_adapter.ts","../src/entities/create_adapter.ts","../src/nanoid.ts","../src/createAsyncThunk.ts","../src/tsHelpers.ts","../src/matchers.ts","../src/listenerMiddleware/utils.ts","../src/listenerMiddleware/exceptions.ts","../src/listenerMiddleware/task.ts","../src/listenerMiddleware/index.ts","redux/types.js","redux/rootReducer.js","js/refs.js","js/renderTask.js","js/insertTaskToHTML.js","redux/actions.js","index.js"],"names":["immer","die","error","args","Error","length","map","s","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","Ctor","hasOwnProperty","call","constructor","Function","toString","objectCtorString","Array","isArray","DRAFTABLE","isMap","isSet","original","base_","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","prototype","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","proxyProperty","this","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","defineProperty","markChangesRecursively","object","undefined","min","Math","enablePatches","deepClonePatchValue","entries","cloned","immerable","clonePatchValueIfNeeded","ADD","applyPatches_","patches","patch","op","parentType","p","type","splice","basePath","inversePatches","assignedValue","origValue","unshift","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","assertUnrevoked","JSON","stringify","setPrototypeOf","__proto__","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","enableAllPlugins","castDraft","castImmutable","hasSymbol","Symbol","hasProxies","Reflect","for","errors","data","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","currentState","deleteProperty","owner","fn","arguments","apply","Immer","config","recipe","defaultBase","self","produce","hasError","Promise","then","ip","arg1","arg2","produceWithPatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","applyPatchesImpl","bind","_defineProperty","symbols","filter","sym","_objectSpread2","defineProperties","formatProdErrorMessage","code","$$observable","observable","randomString","random","substring","split","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","miniKindOf","val","isDate","isError","constructorName","ctorName","toLowerCase","replace","name","message","stackTraceLimit","Date","toDateString","getDate","setDate","kindOf","typeOfVal","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","indexOf","dispatch","action","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","unsubscribe","legacy_createStore","warning","console","e","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","argumentName","unexpectedKeys","assertReducerShape","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","warningMessage","hasChanged","_i","_key","previousStateForKey","nextStateForKey","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","arg","reduce","a","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","middleware","isCrushed","NOT_FOUND","createSingletonCache","equals","put","getEntries","createLruCache","maxSize","cacheIndex","findIndex","pop","defaultEqualityCheck","createCacheKeyComparator","equalityCheck","prev","defaultMemoize","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","comparator","cache","memoized","matchingEntry","find","clearCache","getDependencies","dependencies","every","dep","dependencyTypes","createSelectorCreator","memoize","memoizeOptionsFromArgs","createSelector","_len2","_key2","_recomputations","_lastResult","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","assign","lastResult","recomputations","resetRecomputations","createStructuredSelector","selectors","selectorCreator","objectKeys","resultSelector","_len3","_key3","composition","thunk","createThunkMiddleware","extraArgument","withExtraArgument","ADD_TASK","REMOVE_TASK","MARK_TASK_AS_DONE","MARK_TASK_AS_UNDONE","INIT_PROGRESS_BAR","UPDATE_PROGREES_BAR","ON_ADD","ON_REMOVE","ON_DONE","ON_UNDONE","rootReducer","newTaskList","tasksList","taskId","now","payload","id","isDone","noTasksAdded","lastUpdate","toLocaleString","tasksTotal","filteredTasks","Boolean","tasksListMarkedDone","task","tasksListMarkedUnDone","initialValue","step","abs","progressBar","currentProgress","updateProgressBar","initial","currentStep","currentTasksDone","completed","doneTotal","refs","addTaskform","document","querySelector","taskCounter","renderTask","arrOFTasks","taskName","taskDetails","insertTasktoHTML","elementRef","markup","innerHTML","insertAdjacentHTML","addTask","removeTask","markTaskAsDone","markTaskAsUnDone","initProgressBar","actionType","onAdd","onRemove","onDone","onUndone","onSubmitFormClick","preventDefault","newTask","elements","textContent","style","strokeDashoffset","reset","onTaskCardClick","isDeleteTaskBtnClicked","dataset","js","isCheckBoxClicked","isChecked","checked","parentElement","taskID","addEventListener"],"mappings":"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","file":"src.73b1b579.js","sourceRoot":"../src","sourcesContent":["import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tconst p = \"\" + path[i]\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;","import { enableES5 } from 'immer'\r\nexport * from 'redux'\r\nexport {\r\n  default as createNextState,\r\n  current,\r\n  freeze,\r\n  original,\r\n  isDraft,\r\n} from 'immer'\r\nexport type { Draft } from 'immer'\r\nexport { createSelector } from 'reselect'\r\nexport type {\r\n  Selector,\r\n  OutputParametricSelector,\r\n  OutputSelector,\r\n  ParametricSelector,\r\n} from 'reselect'\r\nexport { createDraftSafeSelector } from './createDraftSafeSelector'\r\nexport type { ThunkAction, ThunkDispatch } from 'redux-thunk'\r\n\r\n// We deliberately enable Immer's ES5 support, on the grounds that\r\n// we assume RTK will be used with React Native and other Proxy-less\r\n// environments.  In addition, that's how Immer 4 behaved, and since\r\n// we want to ship this in an RTK minor, we should keep the same behavior.\r\nenableES5()\r\n\r\nexport {\r\n  // js\r\n  configureStore,\r\n} from './configureStore'\r\nexport type {\r\n  // types\r\n  ConfigureEnhancersCallback,\r\n  ConfigureStoreOptions,\r\n  EnhancedStore,\r\n} from './configureStore'\r\nexport {\r\n  // js\r\n  createAction,\r\n  getType,\r\n} from './createAction'\r\nexport type {\r\n  // types\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  ActionCreatorWithNonInferrablePayload,\r\n  ActionCreatorWithOptionalPayload,\r\n  ActionCreatorWithPayload,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPreparedPayload,\r\n  PrepareAction,\r\n} from './createAction'\r\nexport {\r\n  // js\r\n  createReducer,\r\n} from './createReducer'\r\nexport type {\r\n  // types\r\n  Actions,\r\n  CaseReducer,\r\n  CaseReducers,\r\n} from './createReducer'\r\nexport {\r\n  // js\r\n  createSlice,\r\n} from './createSlice'\r\n\r\nexport type {\r\n  // types\r\n  CreateSliceOptions,\r\n  Slice,\r\n  CaseReducerActions,\r\n  SliceCaseReducers,\r\n  ValidateSliceCaseReducers,\r\n  CaseReducerWithPrepare,\r\n  SliceActionCreator,\r\n} from './createSlice'\r\nexport {\r\n  // js\r\n  createImmutableStateInvariantMiddleware,\r\n  isImmutableDefault,\r\n} from './immutableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  ImmutableStateInvariantMiddlewareOptions,\r\n} from './immutableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createSerializableStateInvariantMiddleware,\r\n  findNonSerializableValue,\r\n  isPlain,\r\n} from './serializableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  SerializableStateInvariantMiddlewareOptions,\r\n} from './serializableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  getDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nexport type {\r\n  // types\r\n  ActionReducerMapBuilder,\r\n} from './mapBuilders'\r\nexport { MiddlewareArray } from './utils'\r\n\r\nexport { createEntityAdapter } from './entities/create_adapter'\r\nexport type {\r\n  Dictionary,\r\n  EntityState,\r\n  EntityAdapter,\r\n  EntitySelectors,\r\n  EntityStateAdapter,\r\n  EntityId,\r\n  Update,\r\n  IdSelector,\r\n  Comparer,\r\n} from './entities/models'\r\n\r\nexport {\r\n  createAsyncThunk,\r\n  unwrapResult,\r\n  miniSerializeError,\r\n} from './createAsyncThunk'\r\nexport type {\r\n  AsyncThunk,\r\n  AsyncThunkOptions,\r\n  AsyncThunkAction,\r\n  AsyncThunkPayloadCreatorReturnValue,\r\n  AsyncThunkPayloadCreator,\r\n  SerializedError,\r\n} from './createAsyncThunk'\r\n\r\nexport {\r\n  // js\r\n  isAllOf,\r\n  isAnyOf,\r\n  isPending,\r\n  isRejected,\r\n  isFulfilled,\r\n  isAsyncThunkAction,\r\n  isRejectedWithValue,\r\n} from './matchers'\r\nexport type {\r\n  // types\r\n  ActionMatchingAllOf,\r\n  ActionMatchingAnyOf,\r\n} from './matchers'\r\n\r\nexport { nanoid } from './nanoid'\r\n\r\nexport { default as isPlainObject } from './isPlainObject'\r\n\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './listenerMiddleware/index'\r\n\r\nexport {\r\n  createListenerMiddleware,\r\n  addListener,\r\n  removeListener,\r\n  clearAllListeners,\r\n  TaskAbortError,\r\n} from './listenerMiddleware/index'\r\n","import type { Middleware, AnyAction } from 'redux'\r\nimport type { ThunkMiddleware } from 'redux-thunk'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware'\r\n/* PROD_START_REMOVE_UMD */\r\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware'\r\n/* PROD_STOP_REMOVE_UMD */\r\n\r\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware'\r\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware'\r\nimport type { ExcludeFromTuple } from './tsHelpers'\r\nimport { MiddlewareArray } from './utils'\r\n\r\nfunction isBoolean(x: any): x is boolean {\r\n  return typeof x === 'boolean'\r\n}\r\n\r\ninterface ThunkOptions<E = any> {\r\n  extraArgument: E\r\n}\r\n\r\ninterface GetDefaultMiddlewareOptions {\r\n  thunk?: boolean | ThunkOptions\r\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions\r\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions\r\n}\r\n\r\nexport type ThunkMiddlewareFor<\r\n  S,\r\n  O extends GetDefaultMiddlewareOptions = {}\r\n> = O extends {\r\n  thunk: false\r\n}\r\n  ? never\r\n  : O extends { thunk: { extraArgument: infer E } }\r\n  ? ThunkMiddleware<S, AnyAction, E>\r\n  : ThunkMiddleware<S, AnyAction>\r\n\r\nexport type CurriedGetDefaultMiddleware<S = any> = <\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options?: O\r\n) => MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>\r\n\r\nexport function curryGetDefaultMiddleware<\r\n  S = any\r\n>(): CurriedGetDefaultMiddleware<S> {\r\n  return function curriedGetDefaultMiddleware(options) {\r\n    return getDefaultMiddleware(options)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n *\r\n * @deprecated Prefer to use the callback notation for the `middleware` option in `configureStore`\r\n * to access a pre-typed `getDefaultMiddleware` instead.\r\n */\r\nexport function getDefaultMiddleware<\r\n  S = any,\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options: O = {} as O\r\n): MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>> {\r\n  const {\r\n    thunk = true,\r\n    immutableCheck = true,\r\n    serializableCheck = true,\r\n  } = options\r\n\r\n  let middlewareArray = new MiddlewareArray<Middleware[]>()\r\n\r\n  if (thunk) {\r\n    if (isBoolean(thunk)) {\r\n      middlewareArray.push(thunkMiddleware)\r\n    } else {\r\n      middlewareArray.push(\r\n        thunkMiddleware.withExtraArgument(thunk.extraArgument)\r\n      )\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (immutableCheck) {\r\n      /* PROD_START_REMOVE_UMD */\r\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(immutableCheck)) {\r\n        immutableOptions = immutableCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createImmutableStateInvariantMiddleware(immutableOptions)\r\n      )\r\n      /* PROD_STOP_REMOVE_UMD */\r\n    }\r\n\r\n    if (serializableCheck) {\r\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(serializableCheck)) {\r\n        serializableOptions = serializableCheck\r\n      }\r\n\r\n      middlewareArray.push(\r\n        createSerializableStateInvariantMiddleware(serializableOptions)\r\n      )\r\n    }\r\n  }\r\n\r\n  return middlewareArray as any\r\n}\r\n","import { current, isDraft } from 'immer'\r\nimport { createSelector } from 'reselect'\r\n\r\n/**\r\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\r\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\r\n * the selector will act on the current draft value, instead of returning a cached value\r\n * that might be possibly outdated if the draft has been modified since.\r\n * @public\r\n */\r\nexport const createDraftSafeSelector: typeof createSelector = (\r\n  ...args: unknown[]\r\n) => {\r\n  const selector = (createSelector as any)(...args)\r\n  const wrappedSelector = (value: unknown, ...rest: unknown[]) =>\r\n    selector(isDraft(value) ? current(value) : value, ...rest)\r\n  return wrappedSelector as any\r\n}\r\n","import type { Action, ActionCreator, StoreEnhancer } from 'redux'\r\nimport { compose } from 'redux'\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface EnhancerOptions {\r\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\r\n  name?: string\r\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\r\n  actionCreators?: ActionCreator<any>[] | { [key: string]: ActionCreator<any> }\r\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\r\n  latency?: number\r\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\r\n  maxAge?: number\r\n  /**\r\n   * See detailed documentation at https://github.com/reduxjs/redux-devtools/blob/%40redux-devtools/extension%403.2.1/extension/docs/API/Arguments.md#serialize\r\n   */\r\n  serialize?:\r\n    | boolean\r\n    | {\r\n        options?:\r\n          | boolean\r\n          | {\r\n              date?: boolean\r\n              regex?: boolean\r\n              undefined?: boolean\r\n              error?: boolean\r\n              symbol?: boolean\r\n              map?: boolean\r\n              set?: boolean\r\n              function?: boolean | Function\r\n            }\r\n        replacer?: (key: string, value: unknown) => unknown\r\n        reviver?: (key: string, value: unknown) => unknown\r\n        immutable?: unknown\r\n        refs?: unknown[]\r\n      }\r\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\r\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A\r\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\r\n  stateSanitizer?: <S>(state: S, index: number) => S\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   */\r\n  actionsBlacklist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   */\r\n  actionsWhitelist?: string | string[]\r\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsBlacklist`/`actionsWhitelist` parameters.\r\n   */\r\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean\r\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldRecordChanges?: boolean\r\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\r\n  pauseActionType?: string\r\n  /**\r\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\r\n  autoPause?: boolean\r\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldStartLocked?: boolean\r\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldHotReload?: boolean\r\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldCatchErrors?: boolean\r\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\r\n  features?: {\r\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\r\n    pause?: boolean\r\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\r\n    lock?: boolean\r\n    /**\r\n     * persist states on page reloading\r\n     */\r\n    persist?: boolean\r\n    /**\r\n     * export history of actions in a file\r\n     */\r\n    export?: boolean | 'custom'\r\n    /**\r\n     * import history of actions from a file\r\n     */\r\n    import?: boolean | 'custom'\r\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\r\n    jump?: boolean\r\n    /**\r\n     * skip (cancel) actions\r\n     */\r\n    skip?: boolean\r\n    /**\r\n     * drag and drop actions in the history list\r\n     */\r\n    reorder?: boolean\r\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\r\n    dispatch?: boolean\r\n    /**\r\n     * generate tests for the selected actions\r\n     */\r\n    test?: boolean\r\n  }\r\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\r\n  trace?: boolean | (<A extends Action>(action: A) => string)\r\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\r\n  traceLimit?: number\r\n}\r\n\r\ntype Compose = typeof compose\r\n\r\ninterface ComposeWithDevTools {\r\n  (options: EnhancerOptions): Compose\r\n  <StoreExt>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const composeWithDevTools: ComposeWithDevTools =\r\n  typeof window !== 'undefined' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : function () {\r\n        if (arguments.length === 0) return undefined\r\n        if (typeof arguments[0] === 'object') return compose\r\n        return compose.apply(null, arguments as any as Function[])\r\n      }\r\n\r\n/**\r\n * @public\r\n */\r\nexport const devToolsEnhancer: {\r\n  (options: EnhancerOptions): StoreEnhancer<any>\r\n} =\r\n  typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    : function () {\r\n        return function (noop) {\r\n          return noop\r\n        }\r\n      }\r\n","/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\r\nexport default function isPlainObject(value: unknown): value is object {\r\n  if (typeof value !== 'object' || value === null) return false\r\n\r\n  let proto = Object.getPrototypeOf(value)\r\n  if (proto === null) return true\r\n\r\n  let baseProto = proto\r\n  while (Object.getPrototypeOf(baseProto) !== null) {\r\n    baseProto = Object.getPrototypeOf(baseProto)\r\n  }\r\n\r\n  return proto === baseProto\r\n}\r\n","import type { Middleware } from 'redux'\r\n\r\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\r\n  let elapsed = 0\r\n  return {\r\n    measureTime<T>(fn: () => T): T {\r\n      const started = Date.now()\r\n      try {\r\n        return fn()\r\n      } finally {\r\n        const finished = Date.now()\r\n        elapsed += finished - started\r\n      }\r\n    },\r\n    warnIfExceeded() {\r\n      if (elapsed > maxDelay) {\r\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \r\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\r\nIt is disabled in production builds, so you don't need to worry about that.`)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class MiddlewareArray<\r\n  Middlewares extends Middleware<any, any>[]\r\n> extends Array<Middlewares[number]> {\r\n  constructor(...items: Middlewares)\r\n  constructor(...args: any[]) {\r\n    super(...args)\r\n    Object.setPrototypeOf(this, MiddlewareArray.prototype)\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return MiddlewareArray as any\r\n  }\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n  concat(...arr: any[]) {\r\n    return super.concat.apply(this, arr)\r\n  }\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new MiddlewareArray(...arr[0].concat(this))\r\n    }\r\n    return new MiddlewareArray(...arr.concat(this))\r\n  }\r\n}\r\n","import type { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\ntype EntryProcessor = (key: string, value: any) => any\r\n\r\nconst isProduction: boolean = process.env.NODE_ENV === 'production'\r\nconst prefix: string = 'Invariant failed'\r\n\r\n// Throw an error if the condition fails\r\n// Strip out error messages for production\r\n// > Not providing an inline default argument for message as the result is smaller\r\nfunction invariant(condition: any, message?: string) {\r\n  if (condition) {\r\n    return\r\n  }\r\n  // Condition not passed\r\n\r\n  // In production we strip the message but still throw\r\n  if (isProduction) {\r\n    throw new Error(prefix)\r\n  }\r\n\r\n  // When not in production we allow the message to pass through\r\n  // *This block will be removed in production builds*\r\n  throw new Error(`${prefix}: ${message || ''}`)\r\n}\r\n\r\nfunction stringify(\r\n  obj: any,\r\n  serializer?: EntryProcessor,\r\n  indent?: string | number,\r\n  decycler?: EntryProcessor\r\n): string {\r\n  return JSON.stringify(obj, getSerialize(serializer, decycler), indent)\r\n}\r\n\r\nfunction getSerialize(\r\n  serializer?: EntryProcessor,\r\n  decycler?: EntryProcessor\r\n): EntryProcessor {\r\n  let stack: any[] = [],\r\n    keys: any[] = []\r\n\r\n  if (!decycler)\r\n    decycler = function (_: string, value: any) {\r\n      if (stack[0] === value) return '[Circular ~]'\r\n      return (\r\n        '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']'\r\n      )\r\n    }\r\n\r\n  return function (this: any, key: string, value: any) {\r\n    if (stack.length > 0) {\r\n      var thisPos = stack.indexOf(this)\r\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\r\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\r\n      if (~stack.indexOf(value)) value = decycler!.call(this, key, value)\r\n    } else stack.push(value)\r\n\r\n    return serializer == null ? value : serializer.call(this, key, value)\r\n  }\r\n}\r\n\r\n/**\r\n * The default `isImmutable` function.\r\n *\r\n * @public\r\n */\r\nexport function isImmutableDefault(value: unknown): boolean {\r\n  return (\r\n    typeof value !== 'object' ||\r\n    value === null ||\r\n    typeof value === 'undefined' ||\r\n    Object.isFrozen(value)\r\n  )\r\n}\r\n\r\nexport function trackForMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: string[] | undefined,\r\n  obj: any\r\n) {\r\n  const trackedProperties = trackProperties(isImmutable, ignorePaths, obj)\r\n  return {\r\n    detectMutations() {\r\n      return detectMutations(isImmutable, ignorePaths, trackedProperties, obj)\r\n    },\r\n  }\r\n}\r\n\r\ninterface TrackedProperty {\r\n  value: any\r\n  children: Record<string, any>\r\n}\r\n\r\nfunction trackProperties(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths = [],\r\n  obj: Record<string, any>,\r\n  path: string = ''\r\n) {\r\n  const tracked: Partial<TrackedProperty> = { value: obj }\r\n\r\n  if (!isImmutable(obj)) {\r\n    tracked.children = {}\r\n\r\n    for (const key in obj) {\r\n      const childPath = path ? path + '.' + key : key\r\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n        continue\r\n      }\r\n\r\n      tracked.children[key] = trackProperties(\r\n        isImmutable,\r\n        ignorePaths,\r\n        obj[key],\r\n        childPath\r\n      )\r\n    }\r\n  }\r\n  return tracked as TrackedProperty\r\n}\r\n\r\ntype IgnorePaths = readonly string[]\r\n\r\nfunction detectMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths = [],\r\n  trackedProperty: TrackedProperty,\r\n  obj: any,\r\n  sameParentRef: boolean = false,\r\n  path: string = ''\r\n): { wasMutated: boolean; path?: string } {\r\n  const prevObj = trackedProperty ? trackedProperty.value : undefined\r\n\r\n  const sameRef = prevObj === obj\r\n\r\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\r\n    return { wasMutated: true, path }\r\n  }\r\n\r\n  if (isImmutable(prevObj) || isImmutable(obj)) {\r\n    return { wasMutated: false }\r\n  }\r\n\r\n  // Gather all keys from prev (tracked) and after objs\r\n  const keysToDetect: Record<string, boolean> = {}\r\n  for (let key in trackedProperty.children) {\r\n    keysToDetect[key] = true\r\n  }\r\n  for (let key in obj) {\r\n    keysToDetect[key] = true\r\n  }\r\n\r\n  for (let key in keysToDetect) {\r\n    const childPath = path ? path + '.' + key : key\r\n    if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n      continue\r\n    }\r\n\r\n    const result = detectMutations(\r\n      isImmutable,\r\n      ignorePaths,\r\n      trackedProperty.children[key],\r\n      obj[key],\r\n      sameRef,\r\n      childPath\r\n    )\r\n\r\n    if (result.wasMutated) {\r\n      return result\r\n    }\r\n  }\r\n  return { wasMutated: false }\r\n}\r\n\r\ntype IsImmutableFunc = (value: any) => boolean\r\n\r\n/**\r\n * Options for `createImmutableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface ImmutableStateInvariantMiddlewareOptions {\r\n  /**\r\n    Callback function to check if a value is considered to be immutable.\r\n    This function is applied recursively to every value contained in the state.\r\n    The default implementation will return true for primitive types \r\n    (like numbers, strings, booleans, null and undefined).\r\n   */\r\n  isImmutable?: IsImmutableFunc\r\n  /** \r\n    An array of dot-separated path strings that match named nodes from \r\n    the root state to ignore when checking for immutability.\r\n    Defaults to undefined\r\n   */\r\n  ignoredPaths?: string[]\r\n  /** Print a warning if checks take longer than N ms. Default: 32ms */\r\n  warnAfter?: number\r\n  // @deprecated. Use ignoredPaths\r\n  ignore?: string[]\r\n}\r\n\r\n/**\r\n * Creates a middleware that checks whether any state was mutated in between\r\n * dispatches or during a dispatch. If any mutations are detected, an error is\r\n * thrown.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createImmutableStateInvariantMiddleware(\r\n  options: ImmutableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => (next) => (action) => next(action)\r\n  }\r\n\r\n  let {\r\n    isImmutable = isImmutableDefault,\r\n    ignoredPaths,\r\n    warnAfter = 32,\r\n    ignore,\r\n  } = options\r\n\r\n  // Alias ignore->ignoredPaths, but prefer ignoredPaths if present\r\n  ignoredPaths = ignoredPaths || ignore\r\n\r\n  const track = trackForMutations.bind(null, isImmutable, ignoredPaths)\r\n\r\n  return ({ getState }) => {\r\n    let state = getState()\r\n    let tracker = track(state)\r\n\r\n    let result\r\n    return (next) => (action) => {\r\n      const measureUtils = getTimeMeasureUtils(\r\n        warnAfter,\r\n        'ImmutableStateInvariantMiddleware'\r\n      )\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        invariant(\r\n          !result.wasMutated,\r\n          `A state mutation was detected between dispatches, in the path '${\r\n            result.path || ''\r\n          }'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n        )\r\n      })\r\n\r\n      const dispatchedAction = next(action)\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        result.wasMutated &&\r\n          invariant(\r\n            !result.wasMutated,\r\n            `A state mutation was detected inside a dispatch, in the path: ${\r\n              result.path || ''\r\n            }. Take a look at the reducer(s) handling the action ${stringify(\r\n              action\r\n            )}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n          )\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n\r\n      return dispatchedAction\r\n    }\r\n  }\r\n}\r\n","import isPlainObject from './isPlainObject'\r\nimport type { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\r\nexport function isPlain(val: any) {\r\n  const type = typeof val\r\n  return (\r\n    type === 'undefined' ||\r\n    val === null ||\r\n    type === 'string' ||\r\n    type === 'boolean' ||\r\n    type === 'number' ||\r\n    Array.isArray(val) ||\r\n    isPlainObject(val)\r\n  )\r\n}\r\n\r\ninterface NonSerializableValue {\r\n  keyPath: string\r\n  value: unknown\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function findNonSerializableValue(\r\n  value: unknown,\r\n  path: string = '',\r\n  isSerializable: (value: unknown) => boolean = isPlain,\r\n  getEntries?: (value: unknown) => [string, any][],\r\n  ignoredPaths: readonly string[] = []\r\n): NonSerializableValue | false {\r\n  let foundNestedSerializable: NonSerializableValue | false\r\n\r\n  if (!isSerializable(value)) {\r\n    return {\r\n      keyPath: path || '<root>',\r\n      value: value,\r\n    }\r\n  }\r\n\r\n  if (typeof value !== 'object' || value === null) {\r\n    return false\r\n  }\r\n\r\n  const entries = getEntries != null ? getEntries(value) : Object.entries(value)\r\n\r\n  const hasIgnoredPaths = ignoredPaths.length > 0\r\n\r\n  for (const [key, nestedValue] of entries) {\r\n    const nestedPath = path ? path + '.' + key : key\r\n\r\n    if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {\r\n      continue\r\n    }\r\n\r\n    if (!isSerializable(nestedValue)) {\r\n      return {\r\n        keyPath: nestedPath,\r\n        value: nestedValue,\r\n      }\r\n    }\r\n\r\n    if (typeof nestedValue === 'object') {\r\n      foundNestedSerializable = findNonSerializableValue(\r\n        nestedValue,\r\n        nestedPath,\r\n        isSerializable,\r\n        getEntries,\r\n        ignoredPaths\r\n      )\r\n\r\n      if (foundNestedSerializable) {\r\n        return foundNestedSerializable\r\n      }\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Options for `createSerializableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface SerializableStateInvariantMiddlewareOptions {\r\n  /**\r\n   * The function to check if a value is considered serializable. This\r\n   * function is applied recursively to every value contained in the\r\n   * state. Defaults to `isPlain()`.\r\n   */\r\n  isSerializable?: (value: any) => boolean\r\n  /**\r\n   * The function that will be used to retrieve entries from each\r\n   * value.  If unspecified, `Object.entries` will be used. Defaults\r\n   * to `undefined`.\r\n   */\r\n  getEntries?: (value: any) => [string, any][]\r\n\r\n  /**\r\n   * An array of action types to ignore when checking for serializability.\r\n   * Defaults to []\r\n   */\r\n  ignoredActions?: string[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings to ignore when checking\r\n   * for serializability, Defaults to ['meta.arg', 'meta.baseQueryMeta']\r\n   */\r\n  ignoredActionPaths?: string[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings to ignore when checking\r\n   * for serializability, Defaults to []\r\n   */\r\n  ignoredPaths?: string[]\r\n  /**\r\n   * Execution time warning threshold. If the middleware takes longer\r\n   * than `warnAfter` ms, a warning will be displayed in the console.\r\n   * Defaults to 32ms.\r\n   */\r\n  warnAfter?: number\r\n\r\n  /**\r\n   * Opt out of checking state. When set to `true`, other state-related params will be ignored.\r\n   */\r\n  ignoreState?: boolean\r\n\r\n  /**\r\n   * Opt out of checking actions. When set to `true`, other action-related params will be ignored.\r\n   */\r\n  ignoreActions?: boolean\r\n}\r\n\r\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createSerializableStateInvariantMiddleware(\r\n  options: SerializableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => (next) => (action) => next(action)\r\n  }\r\n  const {\r\n    isSerializable = isPlain,\r\n    getEntries,\r\n    ignoredActions = [],\r\n    ignoredActionPaths = ['meta.arg', 'meta.baseQueryMeta'],\r\n    ignoredPaths = [],\r\n    warnAfter = 32,\r\n    ignoreState = false,\r\n    ignoreActions = false,\r\n  } = options\r\n\r\n  return (storeAPI) => (next) => (action) => {\r\n    const result = next(action)\r\n\r\n    const measureUtils = getTimeMeasureUtils(\r\n      warnAfter,\r\n      'SerializableStateInvariantMiddleware'\r\n    )\r\n\r\n    if (\r\n      !ignoreActions &&\r\n      !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)\r\n    ) {\r\n      measureUtils.measureTime(() => {\r\n        const foundActionNonSerializableValue = findNonSerializableValue(\r\n          action,\r\n          '',\r\n          isSerializable,\r\n          getEntries,\r\n          ignoredActionPaths\r\n        )\r\n\r\n        if (foundActionNonSerializableValue) {\r\n          const { keyPath, value } = foundActionNonSerializableValue\r\n\r\n          console.error(\r\n            `A non-serializable value was detected in an action, in the path: \\`${keyPath}\\`. Value:`,\r\n            value,\r\n            '\\nTake a look at the logic that dispatched this action: ',\r\n            action,\r\n            '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)',\r\n            '\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)'\r\n          )\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!ignoreState) {\r\n      measureUtils.measureTime(() => {\r\n        const state = storeAPI.getState()\r\n\r\n        const foundStateNonSerializableValue = findNonSerializableValue(\r\n          state,\r\n          '',\r\n          isSerializable,\r\n          getEntries,\r\n          ignoredPaths\r\n        )\r\n\r\n        if (foundStateNonSerializableValue) {\r\n          const { keyPath, value } = foundStateNonSerializableValue\r\n\r\n          console.error(\r\n            `A non-serializable value was detected in the state, in the path: \\`${keyPath}\\`. Value:`,\r\n            value,\r\n            `\r\nTake a look at the reducer(s) handling this action type: ${action.type}.\r\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`\r\n          )\r\n        }\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","import type {\r\n  Reducer,\r\n  ReducersMapObject,\r\n  Middleware,\r\n  Action,\r\n  AnyAction,\r\n  StoreEnhancer,\r\n  Store,\r\n  Dispatch,\r\n  PreloadedState,\r\n  CombinedState,\r\n} from 'redux'\r\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\r\nimport type { EnhancerOptions as DevToolsOptions } from './devtoolsExtension'\r\nimport { composeWithDevTools } from './devtoolsExtension'\r\n\r\nimport isPlainObject from './isPlainObject'\r\nimport type {\r\n  ThunkMiddlewareFor,\r\n  CurriedGetDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nimport { curryGetDefaultMiddleware } from './getDefaultMiddleware'\r\nimport type { NoInfer, ExtractDispatchExtensions } from './tsHelpers'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\n/**\r\n * Callback function type, to be used in `ConfigureStoreOptions.enhancers`\r\n *\r\n * @public\r\n */\r\nexport type ConfigureEnhancersCallback = (\r\n  defaultEnhancers: readonly StoreEnhancer[]\r\n) => StoreEnhancer[]\r\n\r\n/**\r\n * Options for `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport interface ConfigureStoreOptions<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> {\r\n  /**\r\n   * A single reducer function that will be used as the root reducer, or an\r\n   * object of slice reducers that will be passed to `combineReducers()`.\r\n   */\r\n  reducer: Reducer<S, A> | ReducersMapObject<S, A>\r\n\r\n  /**\r\n   * An array of Redux middleware to install. If not supplied, defaults to\r\n   * the set of middleware returned by `getDefaultMiddleware()`.\r\n   */\r\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\r\n\r\n  /**\r\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\r\n   *\r\n   * Additional configuration can be done by passing Redux DevTools options\r\n   */\r\n  devTools?: boolean | DevToolsOptions\r\n\r\n  /**\r\n   * The initial state, same as Redux's createStore.\r\n   * You may optionally specify it to hydrate the state\r\n   * from the server in universal apps, or to restore a previously serialized\r\n   * user session. If you use `combineReducers()` to produce the root reducer\r\n   * function (either directly or indirectly by passing an object as `reducer`),\r\n   * this must be an object with the same shape as the reducer map keys.\r\n   */\r\n  /* \r\n  Not 100% correct but the best approximation we can get:\r\n  - if S is a `CombinedState` applying a second `CombinedState` on it does not change anything.\r\n  - if it is not, there could be two cases:\r\n    - `ReducersMapObject<S, A>` is being passed in. In this case, we will call `combineReducers` on it and `CombinedState<S>` is correct\r\n    - `Reducer<S, A>` is being passed in. In this case, actually `CombinedState<S>` is wrong and `S` would be correct.\r\n    As we cannot distinguish between those two cases without adding another generic paramter, \r\n    we just make the pragmatic assumption that the latter almost never happens.\r\n  */\r\n  preloadedState?: PreloadedState<CombinedState<NoInfer<S>>>\r\n\r\n  /**\r\n   * The store enhancers to apply. See Redux's `createStore()`.\r\n   * All enhancers will be included before the DevTools Extension enhancer.\r\n   * If you need to customize the order of enhancers, supply a callback\r\n   * function that will receive the original array (ie, `[applyMiddleware]`),\r\n   * and should return a new array (such as `[applyMiddleware, offline]`).\r\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\r\n   */\r\n  enhancers?: StoreEnhancer[] | ConfigureEnhancersCallback\r\n}\r\n\r\ntype Middlewares<S> = ReadonlyArray<Middleware<{}, S>>\r\n\r\n/**\r\n * A Redux store returned by `configureStore()`. Supports dispatching\r\n * side-effectful _thunks_ in addition to plain actions.\r\n *\r\n * @public\r\n */\r\nexport interface EnhancedStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> extends Store<S, A> {\r\n  /**\r\n   * The `dispatch` method of your store, enhanced by all its middlewares.\r\n   *\r\n   * @inheritdoc\r\n   */\r\n  dispatch: ExtractDispatchExtensions<M> & Dispatch<A>\r\n}\r\n\r\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\r\nexport function configureStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = [ThunkMiddlewareFor<S>]\r\n>(options: ConfigureStoreOptions<S, A, M>): EnhancedStore<S, A, M> {\r\n  const curriedGetDefaultMiddleware = curryGetDefaultMiddleware<S>()\r\n\r\n  const {\r\n    reducer = undefined,\r\n    middleware = curriedGetDefaultMiddleware(),\r\n    devTools = true,\r\n    preloadedState = undefined,\r\n    enhancers = undefined,\r\n  } = options || {}\r\n\r\n  let rootReducer: Reducer<S, A>\r\n\r\n  if (typeof reducer === 'function') {\r\n    rootReducer = reducer\r\n  } else if (isPlainObject(reducer)) {\r\n    rootReducer = combineReducers(reducer)\r\n  } else {\r\n    throw new Error(\r\n      '\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'\r\n    )\r\n  }\r\n\r\n  let finalMiddleware = middleware\r\n  if (typeof finalMiddleware === 'function') {\r\n    finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware)\r\n\r\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n      throw new Error(\r\n        'when using a middleware builder function, an array of middleware must be returned'\r\n      )\r\n    }\r\n  }\r\n  if (\r\n    !IS_PRODUCTION &&\r\n    finalMiddleware.some((item: any) => typeof item !== 'function')\r\n  ) {\r\n    throw new Error(\r\n      'each middleware provided to configureStore must be a function'\r\n    )\r\n  }\r\n\r\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware)\r\n\r\n  let finalCompose = compose\r\n\r\n  if (devTools) {\r\n    finalCompose = composeWithDevTools({\r\n      // Enable capture of stack traces for dispatched Redux actions\r\n      trace: !IS_PRODUCTION,\r\n      ...(typeof devTools === 'object' && devTools),\r\n    })\r\n  }\r\n\r\n  let storeEnhancers: StoreEnhancer[] = [middlewareEnhancer]\r\n\r\n  if (Array.isArray(enhancers)) {\r\n    storeEnhancers = [middlewareEnhancer, ...enhancers]\r\n  } else if (typeof enhancers === 'function') {\r\n    storeEnhancers = enhancers(storeEnhancers)\r\n  }\r\n\r\n  const composedEnhancer = finalCompose(...storeEnhancers) as any\r\n\r\n  return createStore(rootReducer, preloadedState, composedEnhancer)\r\n}\r\n","import type { Action } from 'redux'\r\nimport type {\r\n  IsUnknownOrNonInferrable,\r\n  IfMaybeUndefined,\r\n  IfVoid,\r\n  IsAny,\r\n} from './tsHelpers'\r\nimport isPlainObject from './isPlainObject'\r\n\r\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n * @template M The type of the action's meta (optional)\r\n * @template E The type of the action's error (optional)\r\n *\r\n * @public\r\n */\r\nexport type PayloadAction<\r\n  P = void,\r\n  T extends string = string,\r\n  M = never,\r\n  E = never\r\n> = {\r\n  payload: P\r\n  type: T\r\n} & ([M] extends [never]\r\n  ? {}\r\n  : {\r\n      meta: M\r\n    }) &\r\n  ([E] extends [never]\r\n    ? {}\r\n    : {\r\n        error: E\r\n      })\r\n\r\n/**\r\n * A \"prepare\" method to be used as the second parameter of `createAction`.\r\n * Takes any number of arguments and returns a Flux Standard Action without\r\n * type (will be added later) that *must* contain a payload (might be undefined).\r\n *\r\n * @public\r\n */\r\nexport type PrepareAction<P> =\r\n  | ((...args: any[]) => { payload: P })\r\n  | ((...args: any[]) => { payload: P; meta: any })\r\n  | ((...args: any[]) => { payload: P; error: any })\r\n  | ((...args: any[]) => { payload: P; meta: any; error: any })\r\n\r\n/**\r\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\r\n *\r\n * @internal\r\n */\r\nexport type _ActionCreatorWithPreparedPayload<\r\n  PA extends PrepareAction<any> | void,\r\n  T extends string = string\r\n> = PA extends PrepareAction<infer P>\r\n  ? ActionCreatorWithPreparedPayload<\r\n      Parameters<PA>,\r\n      P,\r\n      T,\r\n      ReturnType<PA> extends {\r\n        error: infer E\r\n      }\r\n        ? E\r\n        : never,\r\n      ReturnType<PA> extends {\r\n        meta: infer M\r\n      }\r\n        ? M\r\n        : never\r\n    >\r\n  : void\r\n\r\n/**\r\n * Basic type for all action creators.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n */\r\nexport interface BaseActionCreator<P, T extends string, M = never, E = never> {\r\n  type: T\r\n  match: (action: Action<unknown>) => action is PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator that takes multiple arguments that are passed\r\n * to a `PrepareAction` method to create the final Action.\r\n * @typeParam Args arguments for the action creator function\r\n * @typeParam P `payload` type\r\n * @typeParam T `type` name\r\n * @typeParam E optional `error` type\r\n * @typeParam M optional `meta` type\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPreparedPayload<\r\n  Args extends unknown[],\r\n  P,\r\n  T extends string = string,\r\n  E = never,\r\n  M = never\r\n> extends BaseActionCreator<P, T, M, E> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with `Args` will return\r\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\r\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\r\n   */\r\n  (...args: Args): PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes an optional payload of type `P`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\r\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\r\n   */\r\n  (payload?: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes no payload.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithoutPayload<T extends string = string>\r\n  extends BaseActionCreator<undefined, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\r\n   */\r\n  (): PayloadAction<undefined, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that requires a payload of type P.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\r\n   */\r\n  (payload: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithNonInferrablePayload<\r\n  T extends string = string\r\n> extends BaseActionCreator<unknown, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload\r\n   * of exactly the type of the argument.\r\n   */\r\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>\r\n}\r\n\r\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n *\r\n * @typeParam P the `payload` type\r\n * @typeParam T the `type` of the resulting action\r\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\r\n *\r\n * @public\r\n */\r\nexport type PayloadActionCreator<\r\n  P = void,\r\n  T extends string = string,\r\n  PA extends PrepareAction<P> | void = void\r\n> = IfPrepareActionMethodProvided<\r\n  PA,\r\n  _ActionCreatorWithPreparedPayload<PA, T>,\r\n  // else\r\n  IsAny<\r\n    P,\r\n    ActionCreatorWithPayload<any, T>,\r\n    IsUnknownOrNonInferrable<\r\n      P,\r\n      ActionCreatorWithNonInferrablePayload<T>,\r\n      // else\r\n      IfVoid<\r\n        P,\r\n        ActionCreatorWithoutPayload<T>,\r\n        // else\r\n        IfMaybeUndefined<\r\n          P,\r\n          ActionCreatorWithOptionalPayload<P, T>,\r\n          // else\r\n          ActionCreatorWithPayload<P, T>\r\n        >\r\n      >\r\n    >\r\n  >\r\n>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<P = void, T extends string = string>(\r\n  type: T\r\n): PayloadActionCreator<P, T>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<\r\n  PA extends PrepareAction<any>,\r\n  T extends string = string\r\n>(\r\n  type: T,\r\n  prepareAction: PA\r\n): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>\r\n\r\nexport function createAction(type: string, prepareAction?: Function): any {\r\n  function actionCreator(...args: any[]) {\r\n    if (prepareAction) {\r\n      let prepared = prepareAction(...args)\r\n      if (!prepared) {\r\n        throw new Error('prepareAction did not return an object')\r\n      }\r\n\r\n      return {\r\n        type,\r\n        payload: prepared.payload,\r\n        ...('meta' in prepared && { meta: prepared.meta }),\r\n        ...('error' in prepared && { error: prepared.error }),\r\n      }\r\n    }\r\n    return { type, payload: args[0] }\r\n  }\r\n\r\n  actionCreator.toString = () => `${type}`\r\n\r\n  actionCreator.type = type\r\n\r\n  actionCreator.match = (action: Action<unknown>): action is PayloadAction =>\r\n    action.type === type\r\n\r\n  return actionCreator\r\n}\r\n\r\nexport function isFSA(action: unknown): action is {\r\n  type: string\r\n  payload?: unknown\r\n  error?: unknown\r\n  meta?: unknown\r\n} {\r\n  return (\r\n    isPlainObject(action) &&\r\n    typeof (action as any).type === 'string' &&\r\n    Object.keys(action).every(isValidKey)\r\n  )\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1\r\n}\r\n\r\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\r\nexport function getType<T extends string>(\r\n  actionCreator: PayloadActionCreator<any, T>\r\n): T {\r\n  return `${actionCreator}` as T\r\n}\r\n\r\n// helper types for more readable typings\r\n\r\ntype IfPrepareActionMethodProvided<\r\n  PA extends PrepareAction<any> | void,\r\n  True,\r\n  False\r\n> = PA extends (...args: any[]) => any ? True : False\r\n","import type { Action, AnyAction } from 'redux'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ActionMatcherDescriptionCollection,\r\n} from './createReducer'\r\nimport type { TypeGuard } from './tsHelpers'\r\n\r\nexport interface TypedActionCreator<Type extends string> {\r\n  (...args: any[]): Action<Type>\r\n  type: Type\r\n}\r\n\r\n/**\r\n * A builder for an action <-> reducer map.\r\n *\r\n * @public\r\n */\r\nexport interface ActionReducerMapBuilder<State> {\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<ActionCreator extends TypedActionCreator<string>>(\r\n    actionCreator: ActionCreator,\r\n    reducer: CaseReducer<State, ReturnType<ActionCreator>>\r\n  ): ActionReducerMapBuilder<State>\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<Type extends string, A extends Action<Type>>(\r\n    type: Type,\r\n    reducer: CaseReducer<State, A>\r\n  ): ActionReducerMapBuilder<State>\r\n\r\n  /**\r\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\r\n   * @remarks\r\n   * If multiple matcher reducers match, all of them will be executed in the order\r\n   * they were defined in - even if a case reducer already matched.\r\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\r\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/advanced-types.html#using-type-predicates)\r\n   *   function\r\n   * @param reducer - The actual case reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AsyncThunk,\r\n  AnyAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\r\n\r\nconst initialState: Record<string, string> = {};\r\nconst resetAction = createAction(\"reset-tracked-loading-state\");\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith(\"/pending\");\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(resetAction, () => initialState)\r\n    // matcher can be defined outside as a type predicate function\r\n    .addMatcher(isPendingAction, (state, action) => {\r\n      state[action.meta.requestId] = \"pending\";\r\n    })\r\n    .addMatcher(\r\n      // matcher can be defined inline as a type predicate function\r\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"rejected\";\r\n      }\r\n    )\r\n    // matcher can just return boolean and the matcher can receive a generic argument\r\n    .addMatcher<FulfilledAction>(\r\n      (action) => action.type.endsWith(\"/fulfilled\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"fulfilled\";\r\n      }\r\n    );\r\n});\r\n```\r\n   */\r\n  addMatcher<A>(\r\n    matcher: TypeGuard<A> | ((action: any) => boolean),\r\n    reducer: CaseReducer<State, A extends AnyAction ? A : A & AnyAction>\r\n  ): Omit<ActionReducerMapBuilder<State>, 'addCase'>\r\n\r\n  /**\r\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\r\n   * reducer was executed for this action.\r\n   * @param reducer - The fallback \"default case\" reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nconst initialState = { otherActions: 0 }\r\nconst reducer = createReducer(initialState, builder => {\r\n  builder\r\n    // .addCase(...)\r\n    // .addMatcher(...)\r\n    .addDefaultCase((state, action) => {\r\n      state.otherActions++\r\n    })\r\n})\r\n```\r\n   */\r\n  addDefaultCase(reducer: CaseReducer<State, AnyAction>): {}\r\n}\r\n\r\nexport function executeReducerBuilderCallback<S>(\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): [\r\n  CaseReducers<S, any>,\r\n  ActionMatcherDescriptionCollection<S>,\r\n  CaseReducer<S, AnyAction> | undefined\r\n] {\r\n  const actionsMap: CaseReducers<S, any> = {}\r\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = []\r\n  let defaultCaseReducer: CaseReducer<S, AnyAction> | undefined\r\n  const builder = {\r\n    addCase(\r\n      typeOrActionCreator: string | TypedActionCreator<any>,\r\n      reducer: CaseReducer<S>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        /*\r\n         to keep the definition by the user in line with actual behavior, \r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\r\n        if (actionMatchers.length > 0) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addMatcher`'\r\n          )\r\n        }\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      const type =\r\n        typeof typeOrActionCreator === 'string'\r\n          ? typeOrActionCreator\r\n          : typeOrActionCreator.type\r\n      if (type in actionsMap) {\r\n        throw new Error(\r\n          'addCase cannot be called with two reducers for the same action type'\r\n        )\r\n      }\r\n      actionsMap[type] = reducer\r\n      return builder\r\n    },\r\n    addMatcher<A>(\r\n      matcher: TypeGuard<A>,\r\n      reducer: CaseReducer<S, A extends AnyAction ? A : A & AnyAction>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      actionMatchers.push({ matcher, reducer })\r\n      return builder\r\n    },\r\n    addDefaultCase(reducer: CaseReducer<S, AnyAction>) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error('`builder.addDefaultCase` can only be called once')\r\n        }\r\n      }\r\n      defaultCaseReducer = reducer\r\n      return builder\r\n    },\r\n  }\r\n  builderCallback(builder)\r\n  return [actionsMap, actionMatchers, defaultCaseReducer]\r\n}\r\n","import type { Draft } from 'immer'\r\nimport createNextState, { isDraft, isDraftable } from 'immer'\r\nimport type { AnyAction, Action, Reducer } from 'redux'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\n\r\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type Actions<T extends keyof any = string> = Record<T, Action>\r\n\r\n/**\r\n * @deprecated use `TypeGuard` instead\r\n */\r\nexport interface ActionMatcher<A extends AnyAction> {\r\n  (action: AnyAction): action is A\r\n}\r\n\r\nexport type ActionMatcherDescription<S, A extends AnyAction> = {\r\n  matcher: ActionMatcher<A>\r\n  reducer: CaseReducer<S, NoInfer<A>>\r\n}\r\n\r\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\nexport type ActionMatcherDescriptionCollection<S> = Array<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\n/**\r\n * An *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducer<S = any, A extends Action = AnyAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => S | void | Draft<S>\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type CaseReducers<S, AS extends Actions> = {\r\n  [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void\r\n}\r\n\r\nexport type NotFunction<T> = T extends Function ? never : T\r\n\r\nfunction isStateFunction<S>(x: unknown): x is () => S {\r\n  return typeof x === 'function'\r\n}\r\n\r\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\r\n  getInitialState: () => S\r\n}\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This overload accepts a callback function that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AnyAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: AnyAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\nconst reducer = createReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): ReducerWithInitialState<S>\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n * \r\n * @overloadSummary\r\n * This overload accepts an object where the keys are string action types, and the values\r\n * are case reducer functions to handle those action types.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param actionsMap - An object mapping from action types to _case reducers_, each of which handles one specific action type.\r\n * @param actionMatchers - An array of matcher definitions in the form `{matcher, reducer}`.\r\n *   All matching reducers will be executed in order, independently if a case reducer matched or not.\r\n * @param defaultCaseReducer - A \"default case\" reducer that is executed if no case reducer and no matcher\r\n *   reducer was executed for this action.\r\n *\r\n * @example\r\n```js\r\nconst counterReducer = createReducer(0, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n\r\n// Alternately, use a \"lazy initializer\" to provide the initial state\r\n// (works with either form of createReducer)\r\nconst initialState = () => 0\r\nconst counterReducer = createReducer(initialState, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n```\r\n \r\n * Action creators that were generated using [`createAction`](./createAction) may be used directly as the keys here, using computed property syntax:\r\n\r\n```js\r\nconst increment = createAction('increment')\r\nconst decrement = createAction('decrement')\r\n\r\nconst counterReducer = createReducer(0, {\r\n  [increment]: (state, action) => state + action.payload,\r\n  [decrement.type]: (state, action) => state - action.payload\r\n})\r\n```\r\n * @public\r\n */\r\nexport function createReducer<\r\n  S extends NotFunction<any>,\r\n  CR extends CaseReducers<S, any> = CaseReducers<S, any>\r\n>(\r\n  initialState: S | (() => S),\r\n  actionsMap: CR,\r\n  actionMatchers?: ActionMatcherDescriptionCollection<S>,\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S>\r\n\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  mapOrBuilderCallback:\r\n    | CaseReducers<S, any>\r\n    | ((builder: ActionReducerMapBuilder<S>) => void),\r\n  actionMatchers: ReadonlyActionMatcherDescriptionCollection<S> = [],\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S> {\r\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] =\r\n    typeof mapOrBuilderCallback === 'function'\r\n      ? executeReducerBuilderCallback(mapOrBuilderCallback)\r\n      : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer]\r\n\r\n  // Ensure the initial state gets frozen either way\r\n  let getInitialState: () => S\r\n  if (isStateFunction(initialState)) {\r\n    getInitialState = () => createNextState(initialState(), () => {})\r\n  } else {\r\n    const frozenInitialState = createNextState(initialState, () => {})\r\n    getInitialState = () => frozenInitialState\r\n  }\r\n\r\n  function reducer(state = getInitialState(), action: any): S {\r\n    let caseReducers = [\r\n      actionsMap[action.type],\r\n      ...finalActionMatchers\r\n        .filter(({ matcher }) => matcher(action))\r\n        .map(({ reducer }) => reducer),\r\n    ]\r\n    if (caseReducers.filter((cr) => !!cr).length === 0) {\r\n      caseReducers = [finalDefaultCaseReducer]\r\n    }\r\n\r\n    return caseReducers.reduce((previousState, caseReducer): S => {\r\n      if (caseReducer) {\r\n        if (isDraft(previousState)) {\r\n          // If it's already a draft, we must already be inside a `createNextState` call,\r\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\r\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\r\n          const draft = previousState as Draft<S> // We can assume this is already a draft\r\n          const result = caseReducer(draft, action)\r\n\r\n          if (typeof result === 'undefined') {\r\n            return previousState\r\n          }\r\n\r\n          return result as S\r\n        } else if (!isDraftable(previousState)) {\r\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\r\n          // return the caseReducer func and not wrap it with produce.\r\n          const result = caseReducer(previousState as any, action)\r\n\r\n          if (typeof result === 'undefined') {\r\n            if (previousState === null) {\r\n              return previousState\r\n            }\r\n            throw Error(\r\n              'A case reducer on a non-draftable value must not return undefined'\r\n            )\r\n          }\r\n\r\n          return result as S\r\n        } else {\r\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n          // these two types.\r\n          return createNextState(previousState, (draft: Draft<S>) => {\r\n            return caseReducer(draft, action)\r\n          })\r\n        }\r\n      }\r\n\r\n      return previousState\r\n    }, state)\r\n  }\r\n\r\n  reducer.getInitialState = getInitialState\r\n\r\n  return reducer as ReducerWithInitialState<S>\r\n}\r\n","import type { AnyAction, Reducer } from 'redux'\r\nimport { createNextState } from '.'\r\nimport type {\r\n  ActionCreatorWithoutPayload,\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  PrepareAction,\r\n  _ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ReducerWithInitialState,\r\n} from './createReducer'\r\nimport { createReducer, NotFunction } from './createReducer'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\n\r\n/**\r\n * An action creator attached to a slice.\r\n *\r\n * @deprecated please use PayloadActionCreator directly\r\n *\r\n * @public\r\n */\r\nexport type SliceActionCreator<P> = PayloadActionCreator<P>\r\n\r\n/**\r\n * The return value of `createSlice`\r\n *\r\n * @public\r\n */\r\nexport interface Slice<\r\n  State = any,\r\n  CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice name.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The slice's reducer.\r\n   */\r\n  reducer: Reducer<State>\r\n\r\n  /**\r\n   * Action creators for the types of actions that are handled by the slice\r\n   * reducer.\r\n   */\r\n  actions: CaseReducerActions<CaseReducers>\r\n\r\n  /**\r\n   * The individual case reducer functions that were passed in the `reducers` parameter.\r\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\r\n   */\r\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>\r\n\r\n  /**\r\n   * Provides access to the initial state value given to the slice.\r\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\r\n   */\r\n  getInitialState: () => State\r\n}\r\n\r\n/**\r\n * Options for `createSlice()`.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSliceOptions<\r\n  State = any,\r\n  CR extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice's name. Used to namespace the generated action types.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n   */\r\n  initialState: State | (() => State)\r\n\r\n  /**\r\n   * A mapping from action types to action-type-specific *case reducer*\r\n   * functions. For every action type, a matching action creator will be\r\n   * generated using `createAction()`.\r\n   */\r\n  reducers: ValidateSliceCaseReducers<State, CR>\r\n\r\n  /**\r\n   * A callback that receives a *builder* object to define\r\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n   * \r\n   * Alternatively, a mapping from action types to action-type-specific *case reducer*\r\n   * functions. These reducers should have existing action types used\r\n   * as the keys, and action creators will _not_ be generated.\r\n   * \r\n   * @example\r\n```ts\r\nimport { createAction, createSlice, Action, AnyAction } from '@reduxjs/toolkit'\r\nconst incrementBy = createAction<number>('incrementBy')\r\nconst decrement = createAction('decrement')\r\n\r\ninterface RejectedAction extends Action {\r\n  error: Error\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('rejected')\r\n}\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: 0,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(incrementBy, (state, action) => {\r\n        // action is inferred correctly here if using TS\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {})\r\n      // You can match a range of action types\r\n      .addMatcher(\r\n        isRejectedAction,\r\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\r\n        (state, action) => {}\r\n      )\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {})\r\n    }\r\n})\r\n```\r\n   */\r\n  extraReducers?:\r\n    | CaseReducers<NoInfer<State>, any>\r\n    | ((builder: ActionReducerMapBuilder<NoInfer<State>>) => void)\r\n}\r\n\r\n/**\r\n * A CaseReducer with a `prepare` method.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\r\n  reducer: CaseReducer<State, Action>\r\n  prepare: PrepareAction<Action['payload']>\r\n}\r\n\r\n/**\r\n * The type describing a slice's `reducers` option.\r\n *\r\n * @public\r\n */\r\nexport type SliceCaseReducers<State> = {\r\n  [K: string]:\r\n    | CaseReducer<State, PayloadAction<any>>\r\n    | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>\r\n}\r\n\r\n/**\r\n * Derives the slice's `actions` property from the `reducers` options\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends { prepare: any }\r\n    ? ActionCreatorForCaseReducerWithPrepare<CaseReducers[Type]>\r\n    : ActionCreatorForCaseReducer<CaseReducers[Type]>\r\n}\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducerWithPrepare<CR extends { prepare: any }> =\r\n  _ActionCreatorWithPreparedPayload<CR['prepare'], string>\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducer<CR> = CR extends (\r\n  state: any,\r\n  action: infer Action\r\n) => any\r\n  ? Action extends { payload: infer P }\r\n    ? PayloadActionCreator<P>\r\n    : ActionCreatorWithoutPayload\r\n  : ActionCreatorWithoutPayload\r\n\r\n/**\r\n * Extracts the CaseReducers out of a `reducers` object, even if they are\r\n * tested into a `CaseReducerWithPrepare`.\r\n *\r\n * @internal\r\n */\r\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends {\r\n    reducer: infer Reducer\r\n  }\r\n    ? Reducer\r\n    : CaseReducers[Type]\r\n}\r\n\r\n/**\r\n * Used on a SliceCaseReducers object.\r\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\r\n * the `reducer` and the `prepare` function use the same type of `payload`.\r\n *\r\n * Might do additional such checks in the future.\r\n *\r\n * This type is only ever useful if you want to write your own wrapper around\r\n * `createSlice`. Please don't use it otherwise!\r\n *\r\n * @public\r\n */\r\nexport type ValidateSliceCaseReducers<\r\n  S,\r\n  ACR extends SliceCaseReducers<S>\r\n> = ACR &\r\n  {\r\n    [T in keyof ACR]: ACR[T] extends {\r\n      reducer(s: S, action?: infer A): any\r\n    }\r\n      ? {\r\n          prepare(...a: never[]): Omit<A, 'type'>\r\n        }\r\n      : {}\r\n  }\r\n\r\nfunction getType(slice: string, actionKey: string): string {\r\n  return `${slice}/${actionKey}`\r\n}\r\n\r\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\r\nexport function createSlice<\r\n  State,\r\n  CaseReducers extends SliceCaseReducers<State>,\r\n  Name extends string = string\r\n>(\r\n  options: CreateSliceOptions<State, CaseReducers, Name>\r\n): Slice<State, CaseReducers, Name> {\r\n  const { name } = options\r\n  if (!name) {\r\n    throw new Error('`name` is a required option for createSlice')\r\n  }\r\n  const initialState =\r\n    typeof options.initialState == 'function'\r\n      ? options.initialState\r\n      : createNextState(options.initialState, () => {})\r\n\r\n  const reducers = options.reducers || {}\r\n\r\n  const reducerNames = Object.keys(reducers)\r\n\r\n  const sliceCaseReducersByName: Record<string, CaseReducer> = {}\r\n  const sliceCaseReducersByType: Record<string, CaseReducer> = {}\r\n  const actionCreators: Record<string, Function> = {}\r\n\r\n  reducerNames.forEach((reducerName) => {\r\n    const maybeReducerWithPrepare = reducers[reducerName]\r\n    const type = getType(name, reducerName)\r\n\r\n    let caseReducer: CaseReducer<State, any>\r\n    let prepareCallback: PrepareAction<any> | undefined\r\n\r\n    if ('reducer' in maybeReducerWithPrepare) {\r\n      caseReducer = maybeReducerWithPrepare.reducer\r\n      prepareCallback = maybeReducerWithPrepare.prepare\r\n    } else {\r\n      caseReducer = maybeReducerWithPrepare\r\n    }\r\n\r\n    sliceCaseReducersByName[reducerName] = caseReducer\r\n    sliceCaseReducersByType[type] = caseReducer\r\n    actionCreators[reducerName] = prepareCallback\r\n      ? createAction(type, prepareCallback)\r\n      : createAction(type)\r\n  })\r\n\r\n  function buildReducer() {\r\n    const [\r\n      extraReducers = {},\r\n      actionMatchers = [],\r\n      defaultCaseReducer = undefined,\r\n    ] =\r\n      typeof options.extraReducers === 'function'\r\n        ? executeReducerBuilderCallback(options.extraReducers)\r\n        : [options.extraReducers]\r\n\r\n    const finalCaseReducers = { ...extraReducers, ...sliceCaseReducersByType }\r\n    return createReducer(\r\n      initialState,\r\n      finalCaseReducers as any,\r\n      actionMatchers,\r\n      defaultCaseReducer\r\n    )\r\n  }\r\n\r\n  let _reducer: ReducerWithInitialState<State>\r\n\r\n  return {\r\n    name,\r\n    reducer(state, action) {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer(state, action)\r\n    },\r\n    actions: actionCreators as any,\r\n    caseReducers: sliceCaseReducersByName as any,\r\n    getInitialState() {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer.getInitialState()\r\n    },\r\n  }\r\n}\r\n","import type { EntityState } from './models'\r\n\r\nexport function getInitialEntityState<V>(): EntityState<V> {\r\n  return {\r\n    ids: [],\r\n    entities: {},\r\n  }\r\n}\r\n\r\nexport function createInitialStateFactory<V>() {\r\n  function getInitialState(): EntityState<V>\r\n  function getInitialState<S extends object>(\r\n    additionalState: S\r\n  ): EntityState<V> & S\r\n  function getInitialState(additionalState: any = {}): any {\r\n    return Object.assign(getInitialEntityState(), additionalState)\r\n  }\r\n\r\n  return { getInitialState }\r\n}\r\n","import type { Selector } from 'reselect'\r\nimport { createDraftSafeSelector } from '../createDraftSafeSelector'\r\nimport type {\r\n  EntityState,\r\n  EntitySelectors,\r\n  Dictionary,\r\n  EntityId,\r\n} from './models'\r\n\r\nexport function createSelectorsFactory<T>() {\r\n  function getSelectors(): EntitySelectors<T, EntityState<T>>\r\n  function getSelectors<V>(\r\n    selectState: (state: V) => EntityState<T>\r\n  ): EntitySelectors<T, V>\r\n  function getSelectors<V>(\r\n    selectState?: (state: V) => EntityState<T>\r\n  ): EntitySelectors<T, any> {\r\n    const selectIds = (state: EntityState<T>) => state.ids\r\n\r\n    const selectEntities = (state: EntityState<T>) => state.entities\r\n\r\n    const selectAll = createDraftSafeSelector(\r\n      selectIds,\r\n      selectEntities,\r\n      (ids, entities): T[] => ids.map((id) => entities[id]!)\r\n    )\r\n\r\n    const selectId = (_: unknown, id: EntityId) => id\r\n\r\n    const selectById = (entities: Dictionary<T>, id: EntityId) => entities[id]\r\n\r\n    const selectTotal = createDraftSafeSelector(selectIds, (ids) => ids.length)\r\n\r\n    if (!selectState) {\r\n      return {\r\n        selectIds,\r\n        selectEntities,\r\n        selectAll,\r\n        selectTotal,\r\n        selectById: createDraftSafeSelector(\r\n          selectEntities,\r\n          selectId,\r\n          selectById\r\n        ),\r\n      }\r\n    }\r\n\r\n    const selectGlobalizedEntities = createDraftSafeSelector(\r\n      selectState as Selector<V, EntityState<T>>,\r\n      selectEntities\r\n    )\r\n\r\n    return {\r\n      selectIds: createDraftSafeSelector(selectState, selectIds),\r\n      selectEntities: selectGlobalizedEntities,\r\n      selectAll: createDraftSafeSelector(selectState, selectAll),\r\n      selectTotal: createDraftSafeSelector(selectState, selectTotal),\r\n      selectById: createDraftSafeSelector(\r\n        selectGlobalizedEntities,\r\n        selectId,\r\n        selectById\r\n      ),\r\n    }\r\n  }\r\n\r\n  return { getSelectors }\r\n}\r\n","import createNextState, { isDraft } from 'immer'\r\nimport type { EntityState, PreventAny } from './models'\r\nimport type { PayloadAction } from '../createAction'\r\nimport { isFSA } from '../createAction'\r\nimport { IsAny } from '../tsHelpers'\r\n\r\nexport function createSingleArgumentStateOperator<V>(\r\n  mutator: (state: EntityState<V>) => void\r\n) {\r\n  const operator = createStateOperator((_: undefined, state: EntityState<V>) =>\r\n    mutator(state)\r\n  )\r\n\r\n  return function operation<S extends EntityState<V>>(\r\n    state: PreventAny<S, V>\r\n  ): S {\r\n    return operator(state as S, undefined)\r\n  }\r\n}\r\n\r\nexport function createStateOperator<V, R>(\r\n  mutator: (arg: R, state: EntityState<V>) => void\r\n) {\r\n  return function operation<S extends EntityState<V>>(\r\n    state: S,\r\n    arg: R | PayloadAction<R>\r\n  ): S {\r\n    function isPayloadActionArgument(\r\n      arg: R | PayloadAction<R>\r\n    ): arg is PayloadAction<R> {\r\n      return isFSA(arg)\r\n    }\r\n\r\n    const runMutator = (draft: EntityState<V>) => {\r\n      if (isPayloadActionArgument(arg)) {\r\n        mutator(arg.payload, draft)\r\n      } else {\r\n        mutator(arg, draft)\r\n      }\r\n    }\r\n\r\n    if (isDraft(state)) {\r\n      // we must already be inside a `createNextState` call, likely because\r\n      // this is being wrapped in `createReducer` or `createSlice`.\r\n      // It's safe to just pass the draft to the mutator.\r\n      runMutator(state)\r\n\r\n      // since it's a draft, we'll just return it\r\n      return state\r\n    } else {\r\n      // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n      // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n      // these two types.\r\n      return createNextState(state, runMutator)\r\n    }\r\n  }\r\n}\r\n","import type { EntityState, IdSelector, Update, EntityId } from './models'\r\n\r\nexport function selectIdValue<T>(entity: T, selectId: IdSelector<T>) {\r\n  const key = selectId(entity)\r\n\r\n  if (process.env.NODE_ENV !== 'production' && key === undefined) {\r\n    console.warn(\r\n      'The entity passed to the `selectId` implementation returned undefined.',\r\n      'You should probably provide your own `selectId` implementation.',\r\n      'The entity that was passed:',\r\n      entity,\r\n      'The `selectId` implementation:',\r\n      selectId.toString()\r\n    )\r\n  }\r\n\r\n  return key\r\n}\r\n\r\nexport function ensureEntitiesArray<T>(\r\n  entities: readonly T[] | Record<EntityId, T>\r\n): readonly T[] {\r\n  if (!Array.isArray(entities)) {\r\n    entities = Object.values(entities)\r\n  }\r\n\r\n  return entities\r\n}\r\n\r\nexport function splitAddedUpdatedEntities<T>(\r\n  newEntities: readonly T[] | Record<EntityId, T>,\r\n  selectId: IdSelector<T>,\r\n  state: EntityState<T>\r\n): [T[], Update<T>[]] {\r\n  newEntities = ensureEntitiesArray(newEntities)\r\n\r\n  const added: T[] = []\r\n  const updated: Update<T>[] = []\r\n\r\n  for (const entity of newEntities) {\r\n    const id = selectIdValue(entity, selectId)\r\n    if (id in state.entities) {\r\n      updated.push({ id, changes: entity })\r\n    } else {\r\n      added.push(entity)\r\n    }\r\n  }\r\n  return [added, updated]\r\n}\r\n","import type {\r\n  EntityState,\r\n  EntityStateAdapter,\r\n  IdSelector,\r\n  Update,\r\n  EntityId,\r\n} from './models'\r\nimport {\r\n  createStateOperator,\r\n  createSingleArgumentStateOperator,\r\n} from './state_adapter'\r\nimport {\r\n  selectIdValue,\r\n  ensureEntitiesArray,\r\n  splitAddedUpdatedEntities,\r\n} from './utils'\r\n\r\nexport function createUnsortedStateAdapter<T>(\r\n  selectId: IdSelector<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    const key = selectIdValue(entity, selectId)\r\n\r\n    if (key in state.entities) {\r\n      return\r\n    }\r\n\r\n    state.ids.push(key)\r\n    state.entities[key] = entity\r\n  }\r\n\r\n  function addManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    for (const entity of newEntities) {\r\n      addOneMutably(entity, state)\r\n    }\r\n  }\r\n\r\n  function setOneMutably(entity: T, state: R): void {\r\n    const key = selectIdValue(entity, selectId)\r\n    if (!(key in state.entities)) {\r\n      state.ids.push(key)\r\n    }\r\n    state.entities[key] = entity\r\n  }\r\n\r\n  function setManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    for (const entity of newEntities) {\r\n      setOneMutably(entity, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    state.ids = []\r\n    state.entities = {}\r\n\r\n    addManyMutably(newEntities, state)\r\n  }\r\n\r\n  function removeOneMutably(key: EntityId, state: R): void {\r\n    return removeManyMutably([key], state)\r\n  }\r\n\r\n  function removeManyMutably(keys: readonly EntityId[], state: R): void {\r\n    let didMutate = false\r\n\r\n    keys.forEach((key) => {\r\n      if (key in state.entities) {\r\n        delete state.entities[key]\r\n        didMutate = true\r\n      }\r\n    })\r\n\r\n    if (didMutate) {\r\n      state.ids = state.ids.filter((id) => id in state.entities)\r\n    }\r\n  }\r\n\r\n  function removeAllMutably(state: R): void {\r\n    Object.assign(state, {\r\n      ids: [],\r\n      entities: {},\r\n    })\r\n  }\r\n\r\n  function takeNewKey(\r\n    keys: { [id: string]: EntityId },\r\n    update: Update<T>,\r\n    state: R\r\n  ): boolean {\r\n    const original = state.entities[update.id]\r\n    const updated: T = Object.assign({}, original, update.changes)\r\n    const newKey = selectIdValue(updated, selectId)\r\n    const hasNewKey = newKey !== update.id\r\n\r\n    if (hasNewKey) {\r\n      keys[update.id] = newKey\r\n      delete state.entities[update.id]\r\n    }\r\n\r\n    state.entities[newKey] = updated\r\n\r\n    return hasNewKey\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  function updateManyMutably(\r\n    updates: ReadonlyArray<Update<T>>,\r\n    state: R\r\n  ): void {\r\n    const newKeys: { [id: string]: EntityId } = {}\r\n\r\n    const updatesPerEntity: { [id: string]: Update<T> } = {}\r\n\r\n    updates.forEach((update) => {\r\n      // Only apply updates to entities that currently exist\r\n      if (update.id in state.entities) {\r\n        // If there are multiple updates to one entity, merge them together\r\n        updatesPerEntity[update.id] = {\r\n          id: update.id,\r\n          // Spreads ignore falsy values, so this works even if there isn't\r\n          // an existing update already at this key\r\n          changes: {\r\n            ...(updatesPerEntity[update.id]\r\n              ? updatesPerEntity[update.id].changes\r\n              : null),\r\n            ...update.changes,\r\n          },\r\n        }\r\n      }\r\n    })\r\n\r\n    updates = Object.values(updatesPerEntity)\r\n\r\n    const didMutateEntities = updates.length > 0\r\n\r\n    if (didMutateEntities) {\r\n      const didMutateIds =\r\n        updates.filter((update) => takeNewKey(newKeys, update, state)).length >\r\n        0\r\n\r\n      if (didMutateIds) {\r\n        state.ids = state.ids.map((id) => newKeys[id] || id)\r\n      }\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    const [added, updated] = splitAddedUpdatedEntities<T>(\r\n      newEntities,\r\n      selectId,\r\n      state\r\n    )\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  return {\r\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\r\n    addOne: createStateOperator(addOneMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    setOne: createStateOperator(setOneMutably),\r\n    setMany: createStateOperator(setManyMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably),\r\n    removeOne: createStateOperator(removeOneMutably),\r\n    removeMany: createStateOperator(removeManyMutably),\r\n  }\r\n}\r\n","import type {\r\n  EntityState,\r\n  IdSelector,\r\n  Comparer,\r\n  EntityStateAdapter,\r\n  Update,\r\n  EntityId,\r\n} from './models'\r\nimport { createStateOperator } from './state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\nimport {\r\n  selectIdValue,\r\n  ensureEntitiesArray,\r\n  splitAddedUpdatedEntities,\r\n} from './utils'\r\n\r\nexport function createSortedStateAdapter<T>(\r\n  selectId: IdSelector<T>,\r\n  sort: Comparer<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  const { removeOne, removeMany, removeAll } =\r\n    createUnsortedStateAdapter(selectId)\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    return addManyMutably([entity], state)\r\n  }\r\n\r\n  function addManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    const models = newEntities.filter(\r\n      (model) => !(selectIdValue(model, selectId) in state.entities)\r\n    )\r\n\r\n    if (models.length !== 0) {\r\n      merge(models, state)\r\n    }\r\n  }\r\n\r\n  function setOneMutably(entity: T, state: R): void {\r\n    return setManyMutably([entity], state)\r\n  }\r\n\r\n  function setManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    if (newEntities.length !== 0) {\r\n      merge(newEntities, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    state.entities = {}\r\n    state.ids = []\r\n\r\n    addManyMutably(newEntities, state)\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  function takeUpdatedModel(models: T[], update: Update<T>, state: R): boolean {\r\n    if (!(update.id in state.entities)) {\r\n      return false\r\n    }\r\n\r\n    const original = state.entities[update.id]\r\n    const updated = Object.assign({}, original, update.changes)\r\n    const newKey = selectIdValue(updated, selectId)\r\n\r\n    delete state.entities[update.id]\r\n\r\n    models.push(updated)\r\n\r\n    return newKey !== update.id\r\n  }\r\n\r\n  function updateManyMutably(\r\n    updates: ReadonlyArray<Update<T>>,\r\n    state: R\r\n  ): void {\r\n    const models: T[] = []\r\n\r\n    updates.forEach((update) => takeUpdatedModel(models, update, state))\r\n\r\n    if (models.length !== 0) {\r\n      merge(models, state)\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    const [added, updated] = splitAddedUpdatedEntities<T>(\r\n      newEntities,\r\n      selectId,\r\n      state\r\n    )\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  function areArraysEqual(a: readonly unknown[], b: readonly unknown[]) {\r\n    if (a.length !== b.length) {\r\n      return false\r\n    }\r\n\r\n    for (let i = 0; i < a.length && i < b.length; i++) {\r\n      if (a[i] === b[i]) {\r\n        continue\r\n      }\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function merge(models: readonly T[], state: R): void {\r\n    // Insert/overwrite all new/updated\r\n    models.forEach((model) => {\r\n      state.entities[selectId(model)] = model\r\n    })\r\n\r\n    const allEntities = Object.values(state.entities) as T[]\r\n    allEntities.sort(sort)\r\n\r\n    const newSortedIds = allEntities.map(selectId)\r\n    const { ids } = state\r\n\r\n    if (!areArraysEqual(ids, newSortedIds)) {\r\n      state.ids = newSortedIds\r\n    }\r\n  }\r\n\r\n  return {\r\n    removeOne,\r\n    removeMany,\r\n    removeAll,\r\n    addOne: createStateOperator(addOneMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    setOne: createStateOperator(setOneMutably),\r\n    setMany: createStateOperator(setManyMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably),\r\n  }\r\n}\r\n","import type {\r\n  EntityDefinition,\r\n  Comparer,\r\n  IdSelector,\r\n  EntityAdapter,\r\n} from './models'\r\nimport { createInitialStateFactory } from './entity_state'\r\nimport { createSelectorsFactory } from './state_selectors'\r\nimport { createSortedStateAdapter } from './sorted_state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\n\r\n/**\r\n *\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createEntityAdapter<T>(\r\n  options: {\r\n    selectId?: IdSelector<T>\r\n    sortComparer?: false | Comparer<T>\r\n  } = {}\r\n): EntityAdapter<T> {\r\n  const { selectId, sortComparer }: EntityDefinition<T> = {\r\n    sortComparer: false,\r\n    selectId: (instance: any) => instance.id,\r\n    ...options,\r\n  }\r\n\r\n  const stateFactory = createInitialStateFactory<T>()\r\n  const selectorsFactory = createSelectorsFactory<T>()\r\n  const stateAdapter = sortComparer\r\n    ? createSortedStateAdapter(selectId, sortComparer)\r\n    : createUnsortedStateAdapter(selectId)\r\n\r\n  return {\r\n    selectId,\r\n    sortComparer,\r\n    ...stateFactory,\r\n    ...selectorsFactory,\r\n    ...stateAdapter,\r\n  }\r\n}\r\n","// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\r\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\r\n// optimize the gzip compression for this alphabet.\r\nlet urlAlphabet =\r\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\r\n\r\n/**\r\n *\r\n * @public\r\n */\r\nexport let nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n","import type { Dispatch, AnyAction } from 'redux'\r\nimport type {\r\n  PayloadAction,\r\n  ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport type { FallbackIfUnknown, IsAny, IsUnknown } from './tsHelpers'\r\nimport { nanoid } from './nanoid'\r\n\r\n// @ts-ignore we need the import of these types due to a bundling issue.\r\ntype _Keep = PayloadAction | ActionCreatorWithPreparedPayload<any, unknown>\r\n\r\nexport type BaseThunkAPI<\r\n  S,\r\n  E,\r\n  D extends Dispatch = Dispatch,\r\n  RejectedValue = undefined,\r\n  RejectedMeta = unknown,\r\n  FulfilledMeta = unknown\r\n> = {\r\n  dispatch: D\r\n  getState: () => S\r\n  extra: E\r\n  requestId: string\r\n  signal: AbortSignal\r\n  rejectWithValue: IsUnknown<\r\n    RejectedMeta,\r\n    (value: RejectedValue) => RejectWithValue<RejectedValue, RejectedMeta>,\r\n    (\r\n      value: RejectedValue,\r\n      meta: RejectedMeta\r\n    ) => RejectWithValue<RejectedValue, RejectedMeta>\r\n  >\r\n  fulfillWithValue: IsUnknown<\r\n    FulfilledMeta,\r\n    <FulfilledValue>(\r\n      value: FulfilledValue\r\n    ) => FulfillWithMeta<FulfilledValue, FulfilledMeta>,\r\n    <FulfilledValue>(\r\n      value: FulfilledValue,\r\n      meta: FulfilledMeta\r\n    ) => FulfillWithMeta<FulfilledValue, FulfilledMeta>\r\n  >\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface SerializedError {\r\n  name?: string\r\n  message?: string\r\n  stack?: string\r\n  code?: string\r\n}\r\n\r\nconst commonProperties: Array<keyof SerializedError> = [\r\n  'name',\r\n  'message',\r\n  'stack',\r\n  'code',\r\n]\r\n\r\nclass RejectWithValue<Payload, RejectedMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'RejectWithValue'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: RejectedMeta\r\n  ) {}\r\n}\r\n\r\nclass FulfillWithMeta<Payload, FulfilledMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'FulfillWithMeta'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: FulfilledMeta\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Serializes an error into a plain object.\r\n * Reworked from https://github.com/sindresorhus/serialize-error\r\n *\r\n * @public\r\n */\r\nexport const miniSerializeError = (value: any): SerializedError => {\r\n  if (typeof value === 'object' && value !== null) {\r\n    const simpleError: SerializedError = {}\r\n    for (const property of commonProperties) {\r\n      if (typeof value[property] === 'string') {\r\n        simpleError[property] = value[property]\r\n      }\r\n    }\r\n\r\n    return simpleError\r\n  }\r\n\r\n  return { message: String(value) }\r\n}\r\n\r\ntype AsyncThunkConfig = {\r\n  state?: unknown\r\n  dispatch?: Dispatch\r\n  extra?: unknown\r\n  rejectValue?: unknown\r\n  serializedErrorType?: unknown\r\n  pendingMeta?: unknown\r\n  fulfilledMeta?: unknown\r\n  rejectedMeta?: unknown\r\n}\r\n\r\ntype GetState<ThunkApiConfig> = ThunkApiConfig extends {\r\n  state: infer State\r\n}\r\n  ? State\r\n  : unknown\r\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends { extra: infer Extra }\r\n  ? Extra\r\n  : unknown\r\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\r\n  dispatch: infer Dispatch\r\n}\r\n  ? FallbackIfUnknown<\r\n      Dispatch,\r\n      ThunkDispatch<\r\n        GetState<ThunkApiConfig>,\r\n        GetExtra<ThunkApiConfig>,\r\n        AnyAction\r\n      >\r\n    >\r\n  : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, AnyAction>\r\n\r\ntype GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<\r\n  GetState<ThunkApiConfig>,\r\n  GetExtra<ThunkApiConfig>,\r\n  GetDispatch<ThunkApiConfig>,\r\n  GetRejectValue<ThunkApiConfig>,\r\n  GetRejectedMeta<ThunkApiConfig>,\r\n  GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectValue: infer RejectValue\r\n}\r\n  ? RejectValue\r\n  : unknown\r\n\r\ntype GetPendingMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  pendingMeta: infer PendingMeta\r\n}\r\n  ? PendingMeta\r\n  : unknown\r\n\r\ntype GetFulfilledMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  fulfilledMeta: infer FulfilledMeta\r\n}\r\n  ? FulfilledMeta\r\n  : unknown\r\n\r\ntype GetRejectedMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectedMeta: infer RejectedMeta\r\n}\r\n  ? RejectedMeta\r\n  : unknown\r\n\r\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\r\n  serializedErrorType: infer GetSerializedErrorType\r\n}\r\n  ? GetSerializedErrorType\r\n  : SerializedError\r\n\r\ntype MaybePromise<T> = T | Promise<T> | (T extends any ? Promise<T> : never)\r\n\r\n/**\r\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreatorReturnValue<\r\n  Returned,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = MaybePromise<\r\n  | IsUnknown<\r\n      GetFulfilledMeta<ThunkApiConfig>,\r\n      Returned,\r\n      FulfillWithMeta<Returned, GetFulfilledMeta<ThunkApiConfig>>\r\n    >\r\n  | RejectWithValue<\r\n      GetRejectValue<ThunkApiConfig>,\r\n      GetRejectedMeta<ThunkApiConfig>\r\n    >\r\n>\r\n/**\r\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreator<\r\n  Returned,\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = (\r\n  arg: ThunkArg,\r\n  thunkAPI: GetThunkAPI<ThunkApiConfig>\r\n) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>\r\n\r\n/**\r\n * A ThunkAction created by `createAsyncThunk`.\r\n * Dispatching it returns a Promise for either a\r\n * fulfilled or rejected action.\r\n * Also, the returned value contains an `abort()` method\r\n * that allows the asyncAction to be cancelled from the outside.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkAction<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = (\r\n  dispatch: GetDispatch<ThunkApiConfig>,\r\n  getState: () => GetState<ThunkApiConfig>,\r\n  extra: GetExtra<ThunkApiConfig>\r\n) => Promise<\r\n  | ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>>\r\n  | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>\r\n> & {\r\n  abort: (reason?: string) => void\r\n  requestId: string\r\n  arg: ThunkArg\r\n  unwrap: () => Promise<Returned>\r\n}\r\n\r\ntype AsyncThunkActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = IsAny<\r\n  ThunkArg,\r\n  // any handling\r\n  (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n  // unknown handling\r\n  unknown extends ThunkArg\r\n    ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument not specified or specified as void or undefined\r\n    : [ThunkArg] extends [void] | [undefined]\r\n    ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains void\r\n    : [void] extends [ThunkArg] // make optional\r\n    ? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains undefined\r\n    : [undefined] extends [ThunkArg]\r\n    ? WithStrictNullChecks<\r\n        // with strict nullChecks: make optional\r\n        (\r\n          arg?: ThunkArg\r\n        ) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n        // without strict null checks this will match everything, so don't make it optional\r\n        (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n      > // default case: normal argument\r\n    : (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * Options object for `createAsyncThunk`.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkOptions<\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = {\r\n  /**\r\n   * A method to control whether the asyncThunk should be executed. Has access to the\r\n   * `arg`, `api.getState()` and `api.extra` arguments.\r\n   *\r\n   * @returns `false` if it should be skipped\r\n   */\r\n  condition?(\r\n    arg: ThunkArg,\r\n    api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n  ): MaybePromise<boolean | undefined>\r\n  /**\r\n   * If `condition` returns `false`, the asyncThunk will be skipped.\r\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\r\n   * will be dispatched or not.\r\n   *\r\n   * @default `false`\r\n   */\r\n  dispatchConditionRejection?: boolean\r\n\r\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>\r\n\r\n  /**\r\n   * A function to use when generating the `requestId` for the request sequence.\r\n   *\r\n   * @default `nanoid`\r\n   */\r\n  idGenerator?: (arg: ThunkArg) => string\r\n} & IsUnknown<\r\n  GetPendingMeta<ThunkApiConfig>,\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     *\r\n     * Using this optional overload will not modify the types correctly, this overload is only in place to support JavaScript users.\r\n     * Please use the `ThunkApiConfig` parameter `pendingMeta` to get access to a correctly typed overload\r\n     */\r\n    getPendingMeta?(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  },\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     */\r\n    getPendingMeta(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  }\r\n>\r\n\r\nexport type AsyncThunkPendingActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [string, ThunkArg, GetPendingMeta<ThunkApiConfig>?],\r\n  undefined,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'pending'\r\n  } & GetPendingMeta<ThunkApiConfig>\r\n>\r\n\r\nexport type AsyncThunkRejectedActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [\r\n    Error | null,\r\n    string,\r\n    ThunkArg,\r\n    GetRejectValue<ThunkApiConfig>?,\r\n    GetRejectedMeta<ThunkApiConfig>?\r\n  ],\r\n  GetRejectValue<ThunkApiConfig> | undefined,\r\n  string,\r\n  GetSerializedErrorType<ThunkApiConfig>,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'rejected'\r\n    aborted: boolean\r\n    condition: boolean\r\n  } & (\r\n    | ({ rejectedWithValue: false } & {\r\n        [K in keyof GetRejectedMeta<ThunkApiConfig>]?: undefined\r\n      })\r\n    | ({ rejectedWithValue: true } & GetRejectedMeta<ThunkApiConfig>)\r\n  )\r\n>\r\n\r\nexport type AsyncThunkFulfilledActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [Returned, string, ThunkArg, GetFulfilledMeta<ThunkApiConfig>?],\r\n  Returned,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'fulfilled'\r\n  } & GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * A type describing the return value of `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\r\n  pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig>\r\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>\r\n  fulfilled: AsyncThunkFulfilledActionCreator<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig\r\n  >\r\n  typePrefix: string\r\n}\r\n\r\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\r\n// separate signature without `AsyncThunkConfig` for better inference\r\nexport function createAsyncThunk<Returned, ThunkArg = void>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, {}>,\r\n  options?: AsyncThunkOptions<ThunkArg, {}>\r\n): AsyncThunk<Returned, ThunkArg, {}>\r\n\r\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createAsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\r\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig>\r\n\r\nexport function createAsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\r\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\r\n  type RejectedValue = GetRejectValue<ThunkApiConfig>\r\n  type PendingMeta = GetPendingMeta<ThunkApiConfig>\r\n  type FulfilledMeta = GetFulfilledMeta<ThunkApiConfig>\r\n  type RejectedMeta = GetRejectedMeta<ThunkApiConfig>\r\n\r\n  const fulfilled: AsyncThunkFulfilledActionCreator<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig\r\n  > = createAction(\r\n    typePrefix + '/fulfilled',\r\n    (\r\n      payload: Returned,\r\n      requestId: string,\r\n      arg: ThunkArg,\r\n      meta?: FulfilledMeta\r\n    ) => ({\r\n      payload,\r\n      meta: {\r\n        ...((meta as any) || {}),\r\n        arg,\r\n        requestId,\r\n        requestStatus: 'fulfilled' as const,\r\n      },\r\n    })\r\n  )\r\n\r\n  const pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig> =\r\n    createAction(\r\n      typePrefix + '/pending',\r\n      (requestId: string, arg: ThunkArg, meta?: PendingMeta) => ({\r\n        payload: undefined,\r\n        meta: {\r\n          ...((meta as any) || {}),\r\n          arg,\r\n          requestId,\r\n          requestStatus: 'pending' as const,\r\n        },\r\n      })\r\n    )\r\n\r\n  const rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> =\r\n    createAction(\r\n      typePrefix + '/rejected',\r\n      (\r\n        error: Error | null,\r\n        requestId: string,\r\n        arg: ThunkArg,\r\n        payload?: RejectedValue,\r\n        meta?: RejectedMeta\r\n      ) => ({\r\n        payload,\r\n        error: ((options && options.serializeError) || miniSerializeError)(\r\n          error || 'Rejected'\r\n        ) as GetSerializedErrorType<ThunkApiConfig>,\r\n        meta: {\r\n          ...((meta as any) || {}),\r\n          arg,\r\n          requestId,\r\n          rejectedWithValue: !!payload,\r\n          requestStatus: 'rejected' as const,\r\n          aborted: error?.name === 'AbortError',\r\n          condition: error?.name === 'ConditionError',\r\n        },\r\n      })\r\n    )\r\n\r\n  let displayedWarning = false\r\n\r\n  const AC =\r\n    typeof AbortController !== 'undefined'\r\n      ? AbortController\r\n      : class implements AbortController {\r\n          signal: AbortSignal = {\r\n            aborted: false,\r\n            addEventListener() {},\r\n            dispatchEvent() {\r\n              return false\r\n            },\r\n            onabort() {},\r\n            removeEventListener() {},\r\n          }\r\n          abort() {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n              if (!displayedWarning) {\r\n                displayedWarning = true\r\n                console.info(\r\n                  `This platform does not implement AbortController. \r\nIf you want to use the AbortController to react to \\`abort\\` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.`\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n  function actionCreator(\r\n    arg: ThunkArg\r\n  ): AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> {\r\n    return (dispatch, getState, extra) => {\r\n      const requestId = options?.idGenerator\r\n        ? options.idGenerator(arg)\r\n        : nanoid()\r\n\r\n      const abortController = new AC()\r\n      let abortReason: string | undefined\r\n\r\n      const abortedPromise = new Promise<never>((_, reject) =>\r\n        abortController.signal.addEventListener('abort', () =>\r\n          reject({ name: 'AbortError', message: abortReason || 'Aborted' })\r\n        )\r\n      )\r\n\r\n      let started = false\r\n      function abort(reason?: string) {\r\n        if (started) {\r\n          abortReason = reason\r\n          abortController.abort()\r\n        }\r\n      }\r\n\r\n      const promise = (async function () {\r\n        let finalAction: ReturnType<typeof fulfilled | typeof rejected>\r\n        try {\r\n          let conditionResult = options?.condition?.(arg, { getState, extra })\r\n          if (isThenable(conditionResult)) {\r\n            conditionResult = await conditionResult\r\n          }\r\n          if (conditionResult === false) {\r\n            // eslint-disable-next-line no-throw-literal\r\n            throw {\r\n              name: 'ConditionError',\r\n              message: 'Aborted due to condition callback returning false.',\r\n            }\r\n          }\r\n          started = true\r\n          dispatch(\r\n            pending(\r\n              requestId,\r\n              arg,\r\n              options?.getPendingMeta?.({ requestId, arg }, { getState, extra })\r\n            )\r\n          )\r\n          finalAction = await Promise.race([\r\n            abortedPromise,\r\n            Promise.resolve(\r\n              payloadCreator(arg, {\r\n                dispatch,\r\n                getState,\r\n                extra,\r\n                requestId,\r\n                signal: abortController.signal,\r\n                rejectWithValue: ((\r\n                  value: RejectedValue,\r\n                  meta?: RejectedMeta\r\n                ) => {\r\n                  return new RejectWithValue(value, meta)\r\n                }) as any,\r\n                fulfillWithValue: ((value: unknown, meta?: FulfilledMeta) => {\r\n                  return new FulfillWithMeta(value, meta)\r\n                }) as any,\r\n              })\r\n            ).then((result) => {\r\n              if (result instanceof RejectWithValue) {\r\n                throw result\r\n              }\r\n              if (result instanceof FulfillWithMeta) {\r\n                return fulfilled(result.payload, requestId, arg, result.meta)\r\n              }\r\n              return fulfilled(result as any, requestId, arg)\r\n            }),\r\n          ])\r\n        } catch (err) {\r\n          finalAction =\r\n            err instanceof RejectWithValue\r\n              ? rejected(null, requestId, arg, err.payload, err.meta)\r\n              : rejected(err as any, requestId, arg)\r\n        }\r\n        // We dispatch the result action _after_ the catch, to avoid having any errors\r\n        // here get swallowed by the try/catch block,\r\n        // per https://twitter.com/dan_abramov/status/770914221638942720\r\n        // and https://github.com/reduxjs/redux-toolkit/blob/e85eb17b39a2118d859f7b7746e0f3fee523e089/docs/tutorials/advanced-tutorial.md#async-error-handling-logic-in-thunks\r\n\r\n        const skipDispatch =\r\n          options &&\r\n          !options.dispatchConditionRejection &&\r\n          rejected.match(finalAction) &&\r\n          (finalAction as any).meta.condition\r\n\r\n        if (!skipDispatch) {\r\n          dispatch(finalAction)\r\n        }\r\n        return finalAction\r\n      })()\r\n      return Object.assign(promise as Promise<any>, {\r\n        abort,\r\n        requestId,\r\n        arg,\r\n        unwrap() {\r\n          return promise.then<any>(unwrapResult)\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  return Object.assign(\r\n    actionCreator as AsyncThunkActionCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      ThunkApiConfig\r\n    >,\r\n    {\r\n      pending,\r\n      rejected,\r\n      fulfilled,\r\n      typePrefix,\r\n    }\r\n  )\r\n}\r\n\r\ninterface UnwrappableAction {\r\n  payload: any\r\n  meta?: any\r\n  error?: any\r\n}\r\n\r\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<\r\n  T,\r\n  { error: any }\r\n>['payload']\r\n\r\n/**\r\n * @public\r\n */\r\nexport function unwrapResult<R extends UnwrappableAction>(\r\n  action: R\r\n): UnwrappedActionPayload<R> {\r\n  if (action.meta && action.meta.rejectedWithValue) {\r\n    throw action.payload\r\n  }\r\n  if (action.error) {\r\n    throw action.error\r\n  }\r\n  return action.payload\r\n}\r\n\r\ntype WithStrictNullChecks<True, False> = undefined extends boolean\r\n  ? False\r\n  : True\r\n\r\nfunction isThenable(value: any): value is PromiseLike<any> {\r\n  return (\r\n    value !== null &&\r\n    typeof value === 'object' &&\r\n    typeof value.then === 'function'\r\n  )\r\n}\r\n","import type { Middleware, Dispatch } from 'redux'\r\nimport type { MiddlewareArray } from './utils'\r\n\r\n/**\r\n * return True if T is `any`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsAny<T, True, False = never> =\r\n  // test if we are going the left AND right path in the condition\r\n  true | false extends (T extends never ? true : false) ? True : False\r\n\r\n/**\r\n * return True if T is `unknown`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsUnknown<T, True, False = never> = unknown extends T\r\n  ? IsAny<T, False, True>\r\n  : False\r\n\r\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P]\r\n  ? True\r\n  : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsEmptyObj<T, True, False = never> = T extends any\r\n  ? keyof T extends never\r\n    ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>>\r\n    : False\r\n  : never\r\n\r\n/**\r\n * returns True if TS version is above 3.5, False if below.\r\n * uses feature detection to detect TS version >= 3.5\r\n * * versions below 3.5 will return `{}` for unresolvable interference\r\n * * versions above will return `unknown`\r\n *\r\n * @internal\r\n */\r\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<\r\n  ReturnType<<T>() => T>,\r\n  0,\r\n  1\r\n>]\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<\r\n  IsUnknown<T, True, False>,\r\n  IsEmptyObj<T, True, IsUnknown<T, True, False>>\r\n>\r\n\r\n// Appears to have a convenient side effect of ignoring `never` even if that's not what you specified\r\nexport type ExcludeFromTuple<T, E, Acc extends unknown[] = []> = T extends [\r\n  infer Head,\r\n  ...infer Tail\r\n]\r\n  ? ExcludeFromTuple<Tail, E, [...Acc, ...([Head] extends [E] ? [] : [Head])]>\r\n  : Acc\r\n\r\ntype ExtractDispatchFromMiddlewareTuple<\r\n  MiddlewareTuple extends any[],\r\n  Acc extends {}\r\n> = MiddlewareTuple extends [infer Head, ...infer Tail]\r\n  ? ExtractDispatchFromMiddlewareTuple<\r\n      Tail,\r\n      Acc & (Head extends Middleware<infer D, any> ? IsAny<D, {}, D> : {})\r\n    >\r\n  : Acc\r\n\r\nexport type ExtractDispatchExtensions<M> = M extends MiddlewareArray<\r\n  infer MiddlewareTuple\r\n>\r\n  ? ExtractDispatchFromMiddlewareTuple<MiddlewareTuple, {}>\r\n  : M extends Middleware[]\r\n  ? ExtractDispatchFromMiddlewareTuple<[...M], {}>\r\n  : never\r\n\r\n/**\r\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\r\n */\r\nexport type UnionToIntersection<U> = (\r\n  U extends any ? (k: U) => void : never\r\n) extends (k: infer I) => void\r\n  ? I\r\n  : never\r\n\r\n/**\r\n * Helper type. Passes T out again, but boxes it in a way that it cannot\r\n * \"widen\" the type by accident if it is a generic that should be inferred\r\n * from elsewhere.\r\n *\r\n * @internal\r\n */\r\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>\r\n\r\nexport interface TypeGuard<T> {\r\n  (value: any): value is T\r\n}\r\n\r\nexport interface HasMatchFunction<T> {\r\n  match: TypeGuard<T>\r\n}\r\n\r\nexport const hasMatchFunction = <T>(\r\n  v: Matcher<T>\r\n): v is HasMatchFunction<T> => {\r\n  return v && typeof (v as HasMatchFunction<T>).match === 'function'\r\n}\r\n\r\n/** @public */\r\nexport type Matcher<T> = HasMatchFunction<T> | TypeGuard<T>\r\n\r\n/** @public */\r\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<\r\n  infer T\r\n>\r\n  ? T\r\n  : never\r\n","import type {\r\n  ActionFromMatcher,\r\n  Matcher,\r\n  UnionToIntersection,\r\n} from './tsHelpers'\r\nimport { hasMatchFunction } from './tsHelpers'\r\nimport type {\r\n  AsyncThunk,\r\n  AsyncThunkFulfilledActionCreator,\r\n  AsyncThunkPendingActionCreator,\r\n  AsyncThunkRejectedActionCreator,\r\n} from './createAsyncThunk'\r\n\r\n/** @public */\r\nexport type ActionMatchingAnyOf<\r\n  Matchers extends [Matcher<any>, ...Matcher<any>[]]\r\n> = ActionFromMatcher<Matchers[number]>\r\n\r\n/** @public */\r\nexport type ActionMatchingAllOf<\r\n  Matchers extends [Matcher<any>, ...Matcher<any>[]]\r\n> = UnionToIntersection<ActionMatchingAnyOf<Matchers>>\r\n\r\nconst matches = (matcher: Matcher<any>, action: any) => {\r\n  if (hasMatchFunction(matcher)) {\r\n    return matcher.match(action)\r\n  } else {\r\n    return matcher(action)\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches any one of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAnyOf<Matchers extends [Matcher<any>, ...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAnyOf<Matchers> => {\r\n    return matchers.some((matcher) => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches all of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAllOf<Matchers extends [Matcher<any>, ...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAllOf<Matchers> => {\r\n    return matchers.every((matcher) => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * @param action A redux action\r\n * @param validStatus An array of valid meta.requestStatus values\r\n *\r\n * @internal\r\n */\r\nexport function hasExpectedRequestMetadata(\r\n  action: any,\r\n  validStatus: readonly string[]\r\n) {\r\n  if (!action || !action.meta) return false\r\n\r\n  const hasValidRequestId = typeof action.meta.requestId === 'string'\r\n  const hasValidRequestStatus =\r\n    validStatus.indexOf(action.meta.requestStatus) > -1\r\n\r\n  return hasValidRequestId && hasValidRequestStatus\r\n}\r\n\r\nfunction isAsyncThunkArray(a: [any] | AnyAsyncThunk[]): a is AnyAsyncThunk[] {\r\n  return (\r\n    typeof a[0] === 'function' &&\r\n    'pending' in a[0] &&\r\n    'fulfilled' in a[0] &&\r\n    'rejected' in a[0]\r\n  )\r\n}\r\n\r\nexport type UnknownAsyncThunkPendingAction = ReturnType<\r\n  AsyncThunkPendingActionCreator<unknown>\r\n>\r\n\r\nexport type PendingActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['pending']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is pending.\r\n *\r\n * @public\r\n */\r\nexport function isPending(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkPendingAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is pending.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is PendingActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a pending thunk action\r\n * @public\r\n */\r\nexport function isPending(action: any): action is UnknownAsyncThunkPendingAction\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isPending()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is PendingActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.pending\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected.\r\n *\r\n * @public\r\n */\r\nexport function isRejected(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is RejectedActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action\r\n * @public\r\n */\r\nexport function isRejected(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejected()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.rejected\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedWithValueAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedWithValueActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['rejected']> &\r\n    (T extends AsyncThunk<any, any, { rejectValue: infer RejectedValue }>\r\n      ? { payload: RejectedValue }\r\n      : unknown)\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected with value.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected with value.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (\r\n  action: any\r\n) => action is RejectedWithValueActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action with value\r\n * @public\r\n */\r\nexport function isRejectedWithValue(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  const hasFlag = (action: any): action is any => {\r\n    return action && action.meta && action.meta.rejectedWithValue\r\n  }\r\n\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => {\r\n      const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n      return combinedMatcher(action)\r\n    }\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejectedWithValue()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkFulfilledAction = ReturnType<\r\n  AsyncThunkFulfilledActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type FulfilledActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['fulfilled']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is fulfilled.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkFulfilledAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is fulfilled.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is FulfilledActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a fulfilled thunk action\r\n * @public\r\n */\r\nexport function isFulfilled(\r\n  action: any\r\n): action is UnknownAsyncThunkFulfilledAction\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['fulfilled'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isFulfilled()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is FulfilledActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.fulfilled\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkAction =\r\n  | UnknownAsyncThunkPendingAction\r\n  | UnknownAsyncThunkRejectedAction\r\n  | UnknownAsyncThunkFulfilledAction\r\n\r\nexport type AnyAsyncThunk = {\r\n  pending: { match: (action: any) => action is any }\r\n  fulfilled: { match: (action: any) => action is any }\r\n  rejected: { match: (action: any) => action is any }\r\n}\r\n\r\nexport type ActionsFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  | ActionFromMatcher<T['pending']>\r\n  | ActionFromMatcher<T['fulfilled']>\r\n  | ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is ActionsFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a thunk action\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(\r\n  action: any\r\n): action is UnknownAsyncThunkAction\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) =>\r\n      hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isAsyncThunkAction()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is ActionsFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = [] as any\r\n\r\n    for (const asyncThunk of asyncThunks) {\r\n      matchers.push(\r\n        asyncThunk.pending,\r\n        asyncThunk.rejected,\r\n        asyncThunk.fulfilled\r\n      )\r\n    }\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n","import type { AbortSignalWithReason } from './types'\r\n\r\nexport const assertFunction: (\r\n  func: unknown,\r\n  expected: string\r\n) => asserts func is (...args: unknown[]) => unknown = (\r\n  func: unknown,\r\n  expected: string\r\n) => {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(`${expected} is not a function`)\r\n  }\r\n}\r\n\r\nexport const noop = () => {}\r\n\r\nexport const catchRejection = <T>(\r\n  promise: Promise<T>,\r\n  onError = noop\r\n): Promise<T> => {\r\n  promise.catch(onError)\r\n\r\n  return promise\r\n}\r\n\r\nexport const addAbortSignalListener = (\r\n  abortSignal: AbortSignal,\r\n  callback: (evt: Event) => void\r\n) => {\r\n  abortSignal.addEventListener('abort', callback, { once: true })\r\n}\r\n\r\n/**\r\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\r\n * if it is not supported.\r\n *\r\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\r\n * @param abortController\r\n * @param reason\r\n * @returns\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\r\n */\r\nexport const abortControllerWithReason = <T>(\r\n  abortController: AbortController,\r\n  reason: T\r\n): void => {\r\n  type Consumer<T> = (val: T) => void\r\n\r\n  const signal = abortController.signal as AbortSignalWithReason<T>\r\n\r\n  if (signal.aborted) {\r\n    return\r\n  }\r\n\r\n  // Patch `reason` if necessary.\r\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\r\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\r\n  // event are are notified immediately.\r\n  if (!('reason' in signal)) {\r\n    Object.defineProperty(signal, 'reason', {\r\n      enumerable: true,\r\n      value: reason,\r\n      configurable: true,\r\n      writable: true,\r\n    })\r\n  }\r\n\r\n  ;(abortController.abort as Consumer<typeof reason>)(reason)\r\n}\r\n","import type { SerializedError } from '@reduxjs/toolkit'\r\n\r\nconst task = 'task'\r\nconst listener = 'listener'\r\nconst completed = 'completed'\r\nconst cancelled = 'cancelled'\r\n\r\n/* TaskAbortError error codes  */\r\nexport const taskCancelled = `task-${cancelled}` as const\r\nexport const taskCompleted = `task-${completed}` as const\r\nexport const listenerCancelled = `${listener}-${cancelled}` as const\r\nexport const listenerCompleted = `${listener}-${completed}` as const\r\n\r\nexport class TaskAbortError implements SerializedError {\r\n  name = 'TaskAbortError'\r\n  message: string\r\n  constructor(public code: string | undefined) {\r\n    this.message = `${task} ${cancelled} (reason: ${code})`\r\n  }\r\n}\r\n","import { TaskAbortError } from './exceptions'\r\nimport type { AbortSignalWithReason, TaskResult } from './types'\r\nimport { addAbortSignalListener, catchRejection } from './utils'\r\n\r\n/**\r\n * Synchronously raises {@link TaskAbortError} if the task tied to the input `signal` has been cancelled.\r\n * @param signal\r\n * @param reason\r\n * @see {TaskAbortError}\r\n */\r\nexport const validateActive = (signal: AbortSignal): void => {\r\n  if (signal.aborted) {\r\n    throw new TaskAbortError((signal as AbortSignalWithReason<string>).reason)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a promise that will reject {@link TaskAbortError} if the task is cancelled.\r\n * @param signal\r\n * @returns\r\n */\r\nexport const promisifyAbortSignal = (\r\n  signal: AbortSignalWithReason<string>\r\n): Promise<never> => {\r\n  return catchRejection(\r\n    new Promise<never>((_, reject) => {\r\n      const notifyRejection = () => reject(new TaskAbortError(signal.reason))\r\n\r\n      if (signal.aborted) {\r\n        notifyRejection()\r\n      } else {\r\n        addAbortSignalListener(signal, notifyRejection)\r\n      }\r\n    })\r\n  )\r\n}\r\n\r\n/**\r\n * Runs a task and returns promise that resolves to {@link TaskResult}.\r\n * Second argument is an optional `cleanUp` function that always runs after task.\r\n *\r\n * **Note:** `runTask` runs the executor in the next microtask.\r\n * @returns\r\n */\r\nexport const runTask = async <T>(\r\n  task: () => Promise<T>,\r\n  cleanUp?: () => void\r\n): Promise<TaskResult<T>> => {\r\n  try {\r\n    await Promise.resolve()\r\n    const value = await task()\r\n    return {\r\n      status: 'ok',\r\n      value,\r\n    }\r\n  } catch (error: any) {\r\n    return {\r\n      status: error instanceof TaskAbortError ? 'cancelled' : 'rejected',\r\n      error,\r\n    }\r\n  } finally {\r\n    cleanUp?.()\r\n  }\r\n}\r\n\r\n/**\r\n * Given an input `AbortSignal` and a promise returns another promise that resolves\r\n * as soon the input promise is provided or rejects as soon as\r\n * `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\r\nexport const createPause = <T>(signal: AbortSignal) => {\r\n  return (promise: Promise<T>): Promise<T> => {\r\n    return catchRejection(\r\n      Promise.race([promisifyAbortSignal(signal), promise]).then((output) => {\r\n        validateActive(signal)\r\n        return output\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Given an input `AbortSignal` and `timeoutMs` returns a promise that resolves\r\n * after `timeoutMs` or rejects as soon as `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\r\nexport const createDelay = (signal: AbortSignal) => {\r\n  const pause = createPause<void>(signal)\r\n  return (timeoutMs: number): Promise<void> => {\r\n    return pause(new Promise<void>((resolve) => setTimeout(resolve, timeoutMs)))\r\n  }\r\n}\r\n","import type { Dispatch, AnyAction, MiddlewareAPI } from 'redux'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport { createAction } from '../createAction'\r\nimport { nanoid } from '../nanoid'\r\n\r\nimport type {\r\n  ListenerMiddleware,\r\n  ListenerMiddlewareInstance,\r\n  AddListenerOverloads,\r\n  AnyListenerPredicate,\r\n  CreateListenerMiddlewareOptions,\r\n  TypedAddListener,\r\n  TypedCreateListenerEntry,\r\n  FallbackAddListenerOptions,\r\n  ListenerEntry,\r\n  ListenerErrorHandler,\r\n  UnsubscribeListener,\r\n  TakePattern,\r\n  ListenerErrorInfo,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  TypedRemoveListener,\r\n  TaskResult,\r\n  AbortSignalWithReason,\r\n  UnsubscribeListenerOptions,\r\n} from './types'\r\nimport {\r\n  abortControllerWithReason,\r\n  addAbortSignalListener,\r\n  assertFunction,\r\n  catchRejection,\r\n} from './utils'\r\nimport {\r\n  listenerCancelled,\r\n  listenerCompleted,\r\n  TaskAbortError,\r\n  taskCancelled,\r\n  taskCompleted,\r\n} from './exceptions'\r\nimport {\r\n  runTask,\r\n  promisifyAbortSignal,\r\n  validateActive,\r\n  createPause,\r\n  createDelay,\r\n} from './task'\r\nexport { TaskAbortError } from './exceptions'\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './types'\r\n\r\n//Overly-aggressive byte-shaving\r\nconst { assign } = Object\r\n/**\r\n * @internal\r\n */\r\nconst INTERNAL_NIL_TOKEN = {} as const\r\n\r\nconst alm = 'listenerMiddleware' as const\r\n\r\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>) => {\r\n  const linkControllers = (controller: AbortController) =>\r\n    addAbortSignalListener(parentAbortSignal, () =>\r\n      abortControllerWithReason(controller, parentAbortSignal.reason)\r\n    )\r\n\r\n  return <T>(taskExecutor: ForkedTaskExecutor<T>): ForkedTask<T> => {\r\n    assertFunction(taskExecutor, 'taskExecutor')\r\n    const childAbortController = new AbortController()\r\n\r\n    linkControllers(childAbortController)\r\n\r\n    const result = runTask<T>(\r\n      async (): Promise<T> => {\r\n        validateActive(parentAbortSignal)\r\n        validateActive(childAbortController.signal)\r\n        const result = (await taskExecutor({\r\n          pause: createPause(childAbortController.signal),\r\n          delay: createDelay(childAbortController.signal),\r\n          signal: childAbortController.signal,\r\n        })) as T\r\n        validateActive(childAbortController.signal)\r\n        return result\r\n      },\r\n      () => abortControllerWithReason(childAbortController, taskCompleted)\r\n    )\r\n\r\n    return {\r\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\r\n      cancel() {\r\n        abortControllerWithReason(childAbortController, taskCancelled)\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nconst createTakePattern = <S>(\r\n  startListening: AddListenerOverloads<\r\n    UnsubscribeListener,\r\n    S,\r\n    Dispatch<AnyAction>\r\n  >,\r\n  signal: AbortSignal\r\n): TakePattern<S> => {\r\n  /**\r\n   * A function that takes a ListenerPredicate and an optional timeout,\r\n   * and resolves when either the predicate returns `true` based on an action\r\n   * state combination or when the timeout expires.\r\n   * If the parent listener is canceled while waiting, this will throw a\r\n   * TaskAbortError.\r\n   */\r\n  const take = async <P extends AnyListenerPredicate<S>>(\r\n    predicate: P,\r\n    timeout: number | undefined\r\n  ) => {\r\n    validateActive(signal)\r\n\r\n    // Placeholder unsubscribe function until the listener is added\r\n    let unsubscribe: UnsubscribeListener = () => {}\r\n\r\n    const tuplePromise = new Promise<[AnyAction, S, S]>((resolve) => {\r\n      // Inside the Promise, we synchronously add the listener.\r\n      unsubscribe = startListening({\r\n        predicate: predicate as any,\r\n        effect: (action, listenerApi): void => {\r\n          // One-shot listener that cleans up as soon as the predicate passes\r\n          listenerApi.unsubscribe()\r\n          // Resolve the promise with the same arguments the predicate saw\r\n          resolve([\r\n            action,\r\n            listenerApi.getState(),\r\n            listenerApi.getOriginalState(),\r\n          ])\r\n        },\r\n      })\r\n    })\r\n\r\n    const promises: (Promise<null> | Promise<[AnyAction, S, S]>)[] = [\r\n      promisifyAbortSignal(signal),\r\n      tuplePromise,\r\n    ]\r\n\r\n    if (timeout != null) {\r\n      promises.push(\r\n        new Promise<null>((resolve) => setTimeout(resolve, timeout, null))\r\n      )\r\n    }\r\n\r\n    try {\r\n      const output = await Promise.race(promises)\r\n\r\n      validateActive(signal)\r\n      return output\r\n    } finally {\r\n      // Always clean up the listener\r\n      unsubscribe()\r\n    }\r\n  }\r\n\r\n  return ((predicate: AnyListenerPredicate<S>, timeout: number | undefined) =>\r\n    catchRejection(take(predicate, timeout))) as TakePattern<S>\r\n}\r\n\r\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\r\n  let { type, actionCreator, matcher, predicate, effect } = options\r\n\r\n  if (type) {\r\n    predicate = createAction(type).match\r\n  } else if (actionCreator) {\r\n    type = actionCreator!.type\r\n    predicate = actionCreator.match\r\n  } else if (matcher) {\r\n    predicate = matcher\r\n  } else if (predicate) {\r\n    // pass\r\n  } else {\r\n    throw new Error(\r\n      'Creating or removing a listener requires one of the known fields for matching an action'\r\n    )\r\n  }\r\n\r\n  assertFunction(effect, 'options.listener')\r\n\r\n  return { predicate, type, effect }\r\n}\r\n\r\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\r\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = (\r\n  options: FallbackAddListenerOptions\r\n) => {\r\n  const { type, predicate, effect } = getListenerEntryPropsFrom(options)\r\n\r\n  const id = nanoid()\r\n  const entry: ListenerEntry<unknown> = {\r\n    id,\r\n    effect,\r\n    type,\r\n    predicate,\r\n    pending: new Set<AbortController>(),\r\n    unsubscribe: () => {\r\n      throw new Error('Unsubscribe not initialized')\r\n    },\r\n  }\r\n\r\n  return entry\r\n}\r\n\r\nconst createClearListenerMiddleware = (\r\n  listenerMap: Map<string, ListenerEntry>\r\n) => {\r\n  return () => {\r\n    listenerMap.forEach(cancelActiveListeners)\r\n\r\n    listenerMap.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * Safely reports errors to the `errorHandler` provided.\r\n * Errors that occur inside `errorHandler` are notified in a new task.\r\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\r\n * @param errorHandler\r\n * @param errorToNotify\r\n */\r\nconst safelyNotifyError = (\r\n  errorHandler: ListenerErrorHandler,\r\n  errorToNotify: unknown,\r\n  errorInfo: ListenerErrorInfo\r\n): void => {\r\n  try {\r\n    errorHandler(errorToNotify, errorInfo)\r\n  } catch (errorHandlerError) {\r\n    // We cannot let an error raised here block the listener queue.\r\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\r\n    setTimeout(() => {\r\n      throw errorHandlerError\r\n    }, 0)\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const addListener = createAction(\r\n  `${alm}/add`\r\n) as TypedAddListener<unknown>\r\n\r\n/**\r\n * @public\r\n */\r\nexport const clearAllListeners = createAction(`${alm}/removeAll`)\r\n\r\n/**\r\n * @public\r\n */\r\nexport const removeListener = createAction(\r\n  `${alm}/remove`\r\n) as TypedRemoveListener<unknown>\r\n\r\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\r\n  console.error(`${alm}/error`, ...args)\r\n}\r\n\r\nconst cancelActiveListeners = (\r\n  entry: ListenerEntry<unknown, Dispatch<AnyAction>>\r\n) => {\r\n  entry.pending.forEach((controller) => {\r\n    abortControllerWithReason(controller, listenerCancelled)\r\n  })\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function createListenerMiddleware<\r\n  S = unknown,\r\n  D extends Dispatch<AnyAction> = ThunkDispatch<S, unknown, AnyAction>,\r\n  ExtraArgument = unknown\r\n>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) {\r\n  const listenerMap = new Map<string, ListenerEntry>()\r\n  const { extra, onError = defaultErrorHandler } = middlewareOptions\r\n\r\n  assertFunction(onError, 'onError')\r\n\r\n  const insertEntry = (entry: ListenerEntry) => {\r\n    entry.unsubscribe = () => listenerMap.delete(entry!.id)\r\n\r\n    listenerMap.set(entry.id, entry)\r\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\r\n      entry.unsubscribe()\r\n      if (cancelOptions?.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n  }\r\n\r\n  const findListenerEntry = (\r\n    comparator: (entry: ListenerEntry) => boolean\r\n  ): ListenerEntry | undefined => {\r\n    for (const entry of listenerMap.values()) {\r\n      if (comparator(entry)) {\r\n        return entry\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  const startListening = (options: FallbackAddListenerOptions) => {\r\n    let entry = findListenerEntry(\r\n      (existingEntry) => existingEntry.effect === options.effect\r\n    )\r\n\r\n    if (!entry) {\r\n      entry = createListenerEntry(options as any)\r\n    }\r\n\r\n    return insertEntry(entry)\r\n  }\r\n\r\n  const stopListening = (\r\n    options: FallbackAddListenerOptions & UnsubscribeListenerOptions\r\n  ): boolean => {\r\n    const { type, effect, predicate } = getListenerEntryPropsFrom(options)\r\n\r\n    const entry = findListenerEntry((entry) => {\r\n      const matchPredicateOrType =\r\n        typeof type === 'string'\r\n          ? entry.type === type\r\n          : entry.predicate === predicate\r\n\r\n      return matchPredicateOrType && entry.effect === effect\r\n    })\r\n\r\n    if (entry) {\r\n      entry.unsubscribe()\r\n      if (options.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n\r\n    return !!entry\r\n  }\r\n\r\n  const notifyListener = async (\r\n    entry: ListenerEntry<unknown, Dispatch<AnyAction>>,\r\n    action: AnyAction,\r\n    api: MiddlewareAPI,\r\n    getOriginalState: () => S\r\n  ) => {\r\n    const internalTaskController = new AbortController()\r\n    const take = createTakePattern(\r\n      startListening,\r\n      internalTaskController.signal\r\n    )\r\n\r\n    try {\r\n      entry.pending.add(internalTaskController)\r\n      await Promise.resolve(\r\n        entry.effect(\r\n          action,\r\n          // Use assign() rather than ... to avoid extra helper functions added to bundle\r\n          assign({}, api, {\r\n            getOriginalState,\r\n            condition: (\r\n              predicate: AnyListenerPredicate<any>,\r\n              timeout?: number\r\n            ) => take(predicate, timeout).then(Boolean),\r\n            take,\r\n            delay: createDelay(internalTaskController.signal),\r\n            pause: createPause<any>(internalTaskController.signal),\r\n            extra,\r\n            signal: internalTaskController.signal,\r\n            fork: createFork(internalTaskController.signal),\r\n            unsubscribe: entry.unsubscribe,\r\n            subscribe: () => {\r\n              listenerMap.set(entry.id, entry)\r\n            },\r\n            cancelActiveListeners: () => {\r\n              entry.pending.forEach((controller, _, set) => {\r\n                if (controller !== internalTaskController) {\r\n                  abortControllerWithReason(controller, listenerCancelled)\r\n                  set.delete(controller)\r\n                }\r\n              })\r\n            },\r\n          })\r\n        )\r\n      )\r\n    } catch (listenerError) {\r\n      if (!(listenerError instanceof TaskAbortError)) {\r\n        safelyNotifyError(onError, listenerError, {\r\n          raisedBy: 'effect',\r\n        })\r\n      }\r\n    } finally {\r\n      abortControllerWithReason(internalTaskController, listenerCompleted) // Notify that the task has completed\r\n      entry.pending.delete(internalTaskController)\r\n    }\r\n  }\r\n\r\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap)\r\n\r\n  const middleware: ListenerMiddleware<S, D, ExtraArgument> =\r\n    (api) => (next) => (action) => {\r\n      if (addListener.match(action)) {\r\n        return startListening(action.payload)\r\n      }\r\n\r\n      if (clearAllListeners.match(action)) {\r\n        clearListenerMiddleware()\r\n        return\r\n      }\r\n\r\n      if (removeListener.match(action)) {\r\n        return stopListening(action.payload)\r\n      }\r\n\r\n      // Need to get this state _before_ the reducer processes the action\r\n      let originalState: S | typeof INTERNAL_NIL_TOKEN = api.getState()\r\n\r\n      // `getOriginalState` can only be called synchronously.\r\n      // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\r\n      const getOriginalState = (): S => {\r\n        if (originalState === INTERNAL_NIL_TOKEN) {\r\n          throw new Error(\r\n            `${alm}: getOriginalState can only be called synchronously`\r\n          )\r\n        }\r\n\r\n        return originalState as S\r\n      }\r\n\r\n      let result: unknown\r\n\r\n      try {\r\n        // Actually forward the action to the reducer before we handle listeners\r\n        result = next(action)\r\n\r\n        if (listenerMap.size > 0) {\r\n          let currentState = api.getState()\r\n          // Work around ESBuild+TS transpilation issue\r\n          const listenerEntries = Array.from(listenerMap.values())\r\n          for (let entry of listenerEntries) {\r\n            let runListener = false\r\n\r\n            try {\r\n              runListener = entry.predicate(action, currentState, originalState)\r\n            } catch (predicateError) {\r\n              runListener = false\r\n\r\n              safelyNotifyError(onError, predicateError, {\r\n                raisedBy: 'predicate',\r\n              })\r\n            }\r\n\r\n            if (!runListener) {\r\n              continue\r\n            }\r\n\r\n            notifyListener(entry, action, api, getOriginalState)\r\n          }\r\n        }\r\n      } finally {\r\n        // Remove `originalState` store from this scope.\r\n        originalState = INTERNAL_NIL_TOKEN\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n  return {\r\n    middleware,\r\n    startListening,\r\n    stopListening,\r\n    clearListeners: clearListenerMiddleware,\r\n  } as ListenerMiddlewareInstance<S, D, ExtraArgument>\r\n}\r\n","export const ADD_TASK = 'ADD_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const MARK_TASK_AS_DONE = 'MARK_TASK_AS_DONE';\nexport const MARK_TASK_AS_UNDONE = 'MARK_TASK_AS_UNDONE';\nexport const INIT_PROGRESS_BAR = 'INIT_PROGRESS_BAR';\nexport const UPDATE_PROGREES_BAR = 'UPDATE_PROGREES_BAR';\nexport const ON_ADD = 'UPD_PROGRESS_BAR/ON_ADD';\nexport const ON_REMOVE = 'UPD_PROGRESS_BAR/ON_REMOVE';\nexport const ON_DONE = 'UPD_PROGRESS_BAR/ON_DONE';\nexport const ON_UNDONE = 'UPD_PROGRESS_BAR/ON_UNDONE';\n","import {\n  ADD_TASK,\n  REMOVE_TASK,\n  MARK_TASK_AS_DONE,\n  MARK_TASK_AS_UNDONE,\n  INIT_PROGRESS_BAR,\n  UPDATE_PROGREES_BAR,\n  ON_ADD,\n  ON_REMOVE,\n  ON_DONE,\n  ON_UNDONE,\n} from './types';\n\nexport function rootReducer(state, action) {\n  switch (action.type) {\n    case ADD_TASK:\n      const newTaskList = [...state.tasksList];\n      const taskId = Date.now().toString();\n\n      action.payload.id = taskId;\n      action.payload.isDone = false;\n      newTaskList.push(action.payload);\n\n      return {\n        ...state,\n        noTasksAdded: false,\n        lastUpdate: new Date().toLocaleString(action.payload),\n        tasksList: newTaskList,\n        tasksTotal: newTaskList.length,\n      };\n\n    case REMOVE_TASK:\n      const filteredTasks = state.tasksList.filter(({ id }) => id !== action.payload);\n\n      return {\n        ...state,\n        tasksList: filteredTasks,\n        noTasksAdded: !Boolean(filteredTasks.length),\n        lastUpdate: new Date().toLocaleString(),\n        tasksTotal: filteredTasks.length,\n      };\n\n    case MARK_TASK_AS_DONE:\n      const tasksListMarkedDone = [...state.tasksList].map(task => {\n        if (task.id === action.payload) {\n          return {\n            ...task,\n            isDone: true,\n          };\n        } else {\n          return { ...task };\n        }\n      });\n\n      return {\n        ...state,\n        tasksList: tasksListMarkedDone,\n      };\n\n    case MARK_TASK_AS_UNDONE:\n      const tasksListMarkedUnDone = [...state.tasksList].map(task => {\n        if (task.id === action.payload) {\n          return {\n            ...task,\n            isDone: false,\n          };\n        } else {\n          return { ...task };\n        }\n      });\n\n      return {\n        ...state,\n        tasksList: tasksListMarkedUnDone,\n      };\n\n    case INIT_PROGRESS_BAR:\n      let initialValue = -288.5;\n      let tasksTotal = state.tasksTotal;\n      const step = Math.abs(+initialValue / +tasksTotal);\n\n      return {\n        ...state,\n        progressBar: {\n          ...state.progressBar,\n          initialValue,\n          currentProgress: initialValue,\n          step,\n        },\n      };\n\n    case UPDATE_PROGREES_BAR:\n      function updateProgressBar(action) {\n        const initial = state.progressBar.initialValue;\n        const currentStep =\n          state.tasksList.length > 0\n            ? state.progressBar.initialValue / state.tasksList.length\n            : initial;\n        const currentTasksDone = state.tasksList.filter(({ isDone }) => isDone).length;\n        let currentProgress = state.progressBar.currentProgress;\n\n        switch (action.payload) {\n          case ON_ADD:\n            currentProgress = initial + Math.abs(currentStep) * currentTasksDone;\n            break;\n          case ON_REMOVE:\n            currentProgress = initial - currentStep * currentTasksDone;\n            break;\n          case ON_DONE:\n            currentProgress = currentProgress - currentStep;\n            break;\n          case ON_UNDONE:\n            currentProgress = currentProgress + currentStep;\n            break;\n          default:\n            currentProgress = state.progressBar.currentProgress;\n            break;\n        }\n\n        return {\n          ...state,\n          progressBar: {\n            ...state.progressBar,\n            currentProgress,\n            step: currentStep,\n            completed: currentTasksDone,\n          },\n        };\n      }\n\n      return updateProgressBar(action);\n\n    default:\n      return {\n        doneTotal: 0,\n        tasksTotal: 0,\n        noTasksAdded: true,\n        lastUpdate: '',\n        tasksList: [],\n        progressBar: {},\n      };\n  }\n}\n","export const refs = {\n  addTaskform: document.querySelector('[data-form]'),\n  tasksList: document.querySelector('[data-tasks]'),\n  lastUpdate: document.querySelector('[data-update]'),\n  taskCounter: document.querySelector('[data-task-counter]'),\n  progressBar: document.querySelector('[data-progress-bar]'),\n};\n","export const renderTask = arrOFTasks => {\n  return arrOFTasks.map(({ isDone, id, taskName, taskDetails }) => {\n    return `\n            <li class=\"task${isDone ? ' is-done' : ''}\" data-id=\"${id}\">\n                <span>\n                    <input type=\"checkbox\" data-js=\"checkbox\" ${isDone ? 'checked' : ''}/>\n                    <label></label>\n                    <svg width=\"15\" height=\"14\" viewbox=\"0 0 15 14\" fill=\"none\">\n                        <path d=\"M2 8.36364L6.23077 12L13 2\"></path>\n                    </svg>\n                </span>\n                <h3 class=\"task-title\">\n                    ${taskName}\n                </h3>\n                <p class=\"task-body\"\n                    data-task-details\n                >\n                    ${taskDetails || ''}\n                </p>\n                <button class=\"delete-task\" data-js=\"delete\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><!-- Font Awesome Pro 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) --><path d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"/>\n                    </svg>\n                </button>\n            </li>\n        `;\n  }).join``;\n};\n","export const insertTasktoHTML = (elementRef, markup) => {\n  elementRef.innerHTML = '';\n  elementRef.insertAdjacentHTML('beforeend', markup);\n};\n","import {\n  ADD_TASK,\n  REMOVE_TASK,\n  MARK_TASK_AS_DONE,\n  MARK_TASK_AS_UNDONE,\n  INIT_PROGRESS_BAR,\n  UPDATE_PROGREES_BAR,\n  ON_ADD,\n  ON_REMOVE,\n  ON_DONE,\n  ON_UNDONE,\n} from './types';\n\nfunction addTask(task = {}) {\n  return { type: ADD_TASK, payload: task };\n}\nfunction removeTask(id = {}) {\n  return { type: REMOVE_TASK, payload: id };\n}\nfunction markTaskAsDone(id = {}) {\n  return { type: MARK_TASK_AS_DONE, payload: id };\n}\nfunction markTaskAsUnDone(id = {}) {\n  return { type: MARK_TASK_AS_UNDONE, payload: id };\n}\nfunction initProgressBar() {\n  return { type: INIT_PROGRESS_BAR };\n}\nfunction updateProgressBar(actionType) {\n  return { type: UPDATE_PROGREES_BAR, payload: actionType() };\n}\nfunction onAdd() {\n  return ON_ADD;\n}\nfunction onRemove() {\n  return ON_REMOVE;\n}\nfunction onDone() {\n  return ON_DONE;\n}\nfunction onUndone() {\n  return ON_UNDONE;\n}\n\nexport {\n  addTask,\n  removeTask,\n  markTaskAsDone,\n  markTaskAsUnDone,\n  initProgressBar,\n  updateProgressBar,\n  onAdd,\n  onRemove,\n  onDone,\n  onUndone,\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer.js';\nimport { refs } from './js/refs.js';\nimport { renderTask } from './js/renderTask.js';\nimport { insertTasktoHTML } from './js/insertTaskToHTML.js';\nimport {\n  addTask,\n  removeTask,\n  markTaskAsDone,\n  markTaskAsUnDone,\n  initProgressBar,\n  updateProgressBar,\n  onAdd,\n  onRemove,\n  onDone,\n  onUndone,\n} from './redux/actions';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nrefs.addTaskform.addEventListener('submit', onSubmitFormClick);\nrefs.tasksList.addEventListener('click', onTaskCardClick);\n\nfunction onSubmitFormClick(e) {\n  e.preventDefault();\n\n  const taskName = e.target.elements.taskName.value;\n  const taskDetails = e.target.elements.taskDetails.value;\n\n  const newTask = {\n    taskName,\n    taskDetails,\n  };\n\n  store.subscribe(() => {\n    const {\n      tasksList,\n      tasksTotal,\n      lastUpdate,\n      progressBar: { completed, currentProgress },\n    } = store.getState();\n\n    insertTasktoHTML(refs.tasksList, renderTask(tasksList));\n    refs.lastUpdate.textContent = tasksTotal ? `last update: ${lastUpdate}` : '';\n    refs.taskCounter.textContent = tasksTotal ? `${completed} of ${tasksTotal}` : 'no tasks added';\n    refs.progressBar.style.strokeDashoffset = currentProgress;\n  });\n\n  store.dispatch(addTask(newTask));\n  store.dispatch(initProgressBar());\n  store.dispatch(updateProgressBar(onAdd));\n\n  e.target.reset();\n}\n\nfunction onTaskCardClick(e) {\n  const isDeleteTaskBtnClicked = e.target.dataset.js === 'delete';\n  const isCheckBoxClicked = e.target.dataset.js === 'checkbox';\n  const isChecked = e.target.checked;\n\n  if (isDeleteTaskBtnClicked) {\n    const { id } = e.target.parentElement.dataset;\n\n    store.dispatch(removeTask(id));\n    store.dispatch(updateProgressBar(onRemove));\n  }\n  if (isCheckBoxClicked) {\n    const taskID = e.target.parentElement.parentElement.dataset.id;\n\n    isChecked\n      ? store.dispatch(markTaskAsDone(taskID)) && store.dispatch(updateProgressBar(onDone))\n      : store.dispatch(markTaskAsUnDone(taskID)) && store.dispatch(updateProgressBar(onUndone));\n  }\n}\n"]}